2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4006)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4007)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4008)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4009)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4010)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4011)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4012)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4013)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4014)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4015)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4016)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4017)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4018)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4019)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4020)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4021)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4022)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4006)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4007)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4008)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4009)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4010)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4011)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4012)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4013)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4014)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4015)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4016)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4017)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4018)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4019)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4020)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4021)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4022)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4008)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4011)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4012)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4013)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4015)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4017)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4018)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4019)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4020)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4021)
2015-05-05 20:43:56 [1205] [CRITICAL] WORKER TIMEOUT (pid:4022)
2015-05-05 22:50:46 [1205] [CRITICAL] WORKER TIMEOUT (pid:4397)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4768)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4769)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4770)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4771)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4772)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4773)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4774)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4775)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4776)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4777)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4761)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4762)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4763)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4764)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4765)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4766)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4767)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4768)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4769)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4770)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4771)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4772)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4773)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4774)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4775)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4776)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4777)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4761)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4762)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4763)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4764)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4765)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4766)
2015-05-05 23:28:12 [4757] [CRITICAL] WORKER TIMEOUT (pid:4767)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4872)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4873)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4874)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4875)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4876)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4877)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4879)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4880)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4881)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4882)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4883)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4884)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4885)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4886)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4887)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4888)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4872)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4873)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4874)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4875)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4876)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4877)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4879)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4880)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4881)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4882)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4883)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4884)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4885)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4886)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4887)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4888)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4885)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4886)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4887)
2015-05-05 23:45:09 [4757] [CRITICAL] WORKER TIMEOUT (pid:4888)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4878)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4908)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4909)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4910)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4911)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4912)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4913)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4914)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4915)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4916)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4917)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4918)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4919)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4920)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4922)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4923)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4924)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4878)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4908)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4909)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4910)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4911)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4912)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4913)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4914)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4915)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4916)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4917)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4918)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4919)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4920)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4922)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4923)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4924)
2015-05-06 01:07:39 [4757] [CRITICAL] WORKER TIMEOUT (pid:4924)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5030)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5031)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5032)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5033)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5034)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5035)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5036)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5037)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5038)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5039)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5040)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5041)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5042)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5043)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5044)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5045)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5046)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5030)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5031)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5032)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5033)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5034)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5035)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5036)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5037)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5038)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5039)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5040)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5041)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5042)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5043)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5044)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5045)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5046)
2015-05-06 02:56:46 [4757] [CRITICAL] WORKER TIMEOUT (pid:5046)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5120)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5121)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5122)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5123)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5125)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5127)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5108)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5109)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5110)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5112)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5113)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5114)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5115)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5116)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5117)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5118)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5119)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5120)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5121)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5122)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5123)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5125)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5127)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5108)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5109)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5110)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5112)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5113)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5114)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5115)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5116)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5117)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5118)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5119)
2015-05-06 04:45:30 [4757] [CRITICAL] WORKER TIMEOUT (pid:5119)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5167)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5168)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5169)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5170)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5171)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5172)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5173)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5174)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5175)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5176)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5177)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5178)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5179)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5180)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5181)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5182)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5183)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5167)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5168)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5169)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5170)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5171)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5172)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5173)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5174)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5175)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5176)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5177)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5178)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5179)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5180)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5181)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5182)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5183)
2015-05-06 06:34:16 [4757] [CRITICAL] WORKER TIMEOUT (pid:5183)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5193)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5194)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5195)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5196)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5197)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5199)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5200)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5201)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5202)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5203)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5204)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5205)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5206)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5207)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5208)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5209)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5210)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5193)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5194)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5195)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5196)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5197)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5199)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5200)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5201)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5202)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5203)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5204)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5205)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5206)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5207)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5208)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5209)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5210)
2015-05-06 08:05:02 [4757] [CRITICAL] WORKER TIMEOUT (pid:5210)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5219)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5220)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5221)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5222)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5223)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5224)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5225)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5226)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5227)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5228)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5229)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5230)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5231)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5232)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5233)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5234)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5235)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5219)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5220)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5221)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5222)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5223)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5224)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5225)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5226)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5227)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5228)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5229)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5230)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5231)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5232)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5233)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5234)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5235)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5233)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5234)
2015-05-06 08:43:06 [4757] [CRITICAL] WORKER TIMEOUT (pid:5235)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5248)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5249)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5250)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5251)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5252)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5253)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5254)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5255)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5256)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5257)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5258)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5259)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5260)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5261)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5262)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5246)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5247)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5248)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5249)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5250)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5251)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5252)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5253)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5254)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5255)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5256)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5257)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5258)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5259)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5260)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5261)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5262)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5246)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5247)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5250)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5251)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5254)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5255)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5256)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5257)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5258)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5259)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5260)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5261)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5262)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5246)
2015-05-06 09:51:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5247)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5548)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5549)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5550)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5551)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5552)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5553)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5554)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5555)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5556)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5557)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5558)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5559)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5560)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5561)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5562)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5563)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5564)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5548)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5549)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5550)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5551)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5552)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5553)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5554)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5555)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5556)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5557)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5558)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5559)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5560)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5561)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5562)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5563)
2015-05-06 10:02:22 [4757] [CRITICAL] WORKER TIMEOUT (pid:5564)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5599)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5600)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5601)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5602)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5603)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5604)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5605)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5606)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5607)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5608)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5609)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5610)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5611)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5612)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5613)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5614)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5615)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5599)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5600)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5601)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5602)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5603)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5604)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5605)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5606)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5607)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5608)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5609)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5610)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5611)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5612)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5613)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5614)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5615)
2015-05-06 10:09:35 [4757] [CRITICAL] WORKER TIMEOUT (pid:5615)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5655)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5656)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5657)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5658)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5659)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5660)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5661)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5662)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5663)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5664)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5665)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5666)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5667)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5668)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5669)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5670)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5671)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5655)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5656)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5657)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5658)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5659)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5660)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5661)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5662)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5663)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5664)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5665)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5666)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5667)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5668)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5669)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5670)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5671)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5659)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5660)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5661)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5662)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5663)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5664)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5665)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5666)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5667)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5668)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5669)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5670)
2015-05-06 11:06:40 [4757] [CRITICAL] WORKER TIMEOUT (pid:5671)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5814)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5815)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5816)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5817)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5818)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5819)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5820)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5821)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5822)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5823)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5824)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5825)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5826)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5827)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5828)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5829)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5830)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5814)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5815)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5816)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5817)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5818)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5819)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5820)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5821)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5822)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5823)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5824)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5825)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5826)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5827)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5828)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5829)
2015-05-06 11:39:47 [4757] [CRITICAL] WORKER TIMEOUT (pid:5830)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5850)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5851)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5852)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5853)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5855)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5856)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5857)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5858)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5859)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5860)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5861)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5862)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5863)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5864)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5865)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5866)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5867)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5850)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5851)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5852)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5853)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5855)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5856)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5857)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5858)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5859)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5860)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5861)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5862)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5863)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5864)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5865)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5866)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5867)
2015-05-06 12:31:21 [4757] [CRITICAL] WORKER TIMEOUT (pid:5867)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5888)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5889)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5890)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5891)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5892)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5893)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5894)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5895)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5896)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5897)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5898)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5899)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5883)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5884)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5885)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5886)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5887)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5888)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5889)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5890)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5891)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5892)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5893)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5894)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5895)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5896)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5897)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5898)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5899)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5883)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5884)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5885)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5886)
2015-05-06 12:32:55 [4757] [CRITICAL] WORKER TIMEOUT (pid:5887)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23275)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23276)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23277)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23278)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23279)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23280)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23281)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23282)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23283)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23284)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23285)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23286)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23287)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23288)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23289)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23290)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23291)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23275)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23276)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23277)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23278)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23279)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23280)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23281)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23282)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23283)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23284)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23285)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23286)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23287)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23288)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23289)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23290)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23291)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23289)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23290)
2015-05-18 16:47:03 [23271] [CRITICAL] WORKER TIMEOUT (pid:23291)
2015-05-18 20:13:21,138 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 666, in regularpage
    return render_template(pagename)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/templating.py", line 127, in render_template
    return _render(ctx.app.jinja_env.get_or_select_template(template_name_or_list),
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/jinja2/environment.py", line 830, in get_or_select_template
    return self.get_template(template_name_or_list, parent, globals)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/jinja2/environment.py", line 791, in get_template
    return self._load_template(name, self.make_globals(globals))
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/jinja2/environment.py", line 765, in _load_template
    template = self.loader.load(self, name, globals)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/jinja2/loaders.py", line 113, in load
    source, filename, uptodate = self.get_source(environment, name)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/templating.py", line 64, in get_source
    raise TemplateNotFound(template)
TemplateNotFound: notify
2015-05-18 20:13:57,187 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 666, in regularpage
    return render_template(pagename)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/templating.py", line 127, in render_template
    return _render(ctx.app.jinja_env.get_or_select_template(template_name_or_list),
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/jinja2/environment.py", line 830, in get_or_select_template
    return self.get_template(template_name_or_list, parent, globals)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/jinja2/environment.py", line 791, in get_template
    return self._load_template(name, self.make_globals(globals))
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/jinja2/environment.py", line 765, in _load_template
    template = self.loader.load(self, name, globals)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/jinja2/loaders.py", line 113, in load
    source, filename, uptodate = self.get_source(environment, name)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/templating.py", line 64, in get_source
    raise TemplateNotFound(template)
TemplateNotFound: notify
emailing result for uniqueId: test2:lab
[]
2015-05-18 20:14:57,607 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1478, in full_dispatch_request
    response = self.make_response(rv)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1566, in make_response
    raise ValueError('View function did not return a response')
ValueError: View function did not return a response
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24192)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24193)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24194)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24195)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24196)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24197)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24181)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24182)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24183)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24184)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24185)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24186)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24187)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24188)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24189)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24190)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24191)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24192)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24193)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24194)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24195)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24196)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24197)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24181)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24182)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24183)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24184)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24185)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24186)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24187)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24188)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24189)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24190)
2015-05-18 20:19:03 [24177] [CRITICAL] WORKER TIMEOUT (pid:24191)
emailing result for uniqueId: test2:lab
[]
2015-05-18 20:38:53,882 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1478, in full_dispatch_request
    response = self.make_response(rv)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1566, in make_response
    raise ValueError('View function did not return a response')
ValueError: View function did not return a response
emailing result for uniqueId: test2:lab
[]
2015-05-18 20:39:52,994 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1478, in full_dispatch_request
    response = self.make_response(rv)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1566, in make_response
    raise ValueError('View function did not return a response')
ValueError: View function did not return a response
emailing result for uniqueId: test2:lab
[Subject(test2:lab, 1, 1, 1.0)]
2015-05-18 20:42:25,748 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 80, in notify
    print user.datastring
AttributeError: 'list' object has no attribute 'datastring'
emailing result for uniqueId: test2:lab
[Subject(test2:lab, 1, 1, 1.0)]
2015-05-18 20:42:33,814 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 80, in notify
    print user.datastring
AttributeError: 'list' object has no attribute 'datastring'
emailing result for uniqueId: test2:lab
[Subject(test2:lab, 1, 1, 1.0)]
{"condition":1,"counterbalance":0,"assignmentId":"lab","workerId":"test2","hitId":"lab","currenttrial":54,"bonus":0,"data":[{"current_trial":0,"dateTime":1431972837173,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":1,"dateTime":1431972837176,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":2,"dateTime":1431972837176,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":3,"dateTime":1431972837176,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":4,"dateTime":1431972837176,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":5,"dateTime":1431972837176,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":6,"dateTime":1431972837176,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":7,"dateTime":1431972837176,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":8,"dateTime":1431972837182,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":9,"dateTime":1431972897587,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":10,"dateTime":1431972897589,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":11,"dateTime":1431972897589,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":12,"dateTime":1431972897589,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":13,"dateTime":1431972897589,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":14,"dateTime":1431972897589,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":15,"dateTime":1431972897589,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":16,"dateTime":1431972897590,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":17,"dateTime":1431972897601,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":18,"dateTime":1431974333865,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":19,"dateTime":1431974333867,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":20,"dateTime":1431974333867,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":21,"dateTime":1431974333867,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":22,"dateTime":1431974333867,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":23,"dateTime":1431974333867,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":24,"dateTime":1431974333867,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":25,"dateTime":1431974333867,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":26,"dateTime":1431974333875,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":27,"dateTime":1431974392973,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":28,"dateTime":1431974392975,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":29,"dateTime":1431974392975,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":30,"dateTime":1431974392976,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":31,"dateTime":1431974392976,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":32,"dateTime":1431974392976,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":33,"dateTime":1431974392976,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":34,"dateTime":1431974392976,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":35,"dateTime":1431974392986,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":36,"dateTime":1431974545730,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":37,"dateTime":1431974545732,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":38,"dateTime":1431974545732,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":39,"dateTime":1431974545732,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":40,"dateTime":1431974545732,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":41,"dateTime":1431974545732,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":42,"dateTime":1431974545733,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":43,"dateTime":1431974545733,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":44,"dateTime":1431974545739,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"uniqueid":"test2:lab","current_trial":45,"dateTime":1431974553798,"trialdata":["uniqueId","test2:lab"]},{"uniqueid":"test2:lab","current_trial":46,"dateTime":1431974553800,"trialdata":["condition",1]},{"uniqueid":"test2:lab","current_trial":47,"dateTime":1431974553800,"trialdata":["counterbalance",0]},{"uniqueid":"test2:lab","current_trial":48,"dateTime":1431974553800,"trialdata":["rule_cond","rb"]},{"uniqueid":"test2:lab","current_trial":49,"dateTime":1431974553801,"trialdata":["stim_cond","rectangle"]},{"uniqueid":"test2:lab","current_trial":50,"dateTime":1431974553801,"trialdata":["sel_cond","both"]},{"uniqueid":"test2:lab","current_trial":51,"dateTime":1431974553801,"trialdata":["dim_mapping",0]},{"uniqueid":"test2:lab","current_trial":52,"dateTime":1431974553801,"trialdata":["loading test sets from: static/testsets.csv"]},{"uniqueid":"test2:lab","current_trial":53,"dateTime":1431974553806,"trialdata":["COMPLETE"]}],"questiondata":{},"eventdata":[{"eventtype":"initialized","interval":0,"timestamp":1431972837089,"value":null},{"eventtype":"window_resize","interval":0,"timestamp":1431972837089,"value":[1157,451]},{"eventtype":"focus","value":"on","timestamp":1431974553760,"interval":1716671}],"useragent":""}
config
<psiturk.psiturk_config.PsiturkConfig instance at 0x10a0e7ef0>
2015-05-18 20:43:34,999 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1478, in full_dispatch_request
    response = self.make_response(rv)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1566, in make_response
    raise ValueError('View function did not return a response')
ValueError: View function did not return a response
emailing result for uniqueId: test2:lab
[Subject(test2:lab, 1, 1, 1.0)]
{"condition":1,"counterbalance":0,"assignmentId":"lab","workerId":"test2","hitId":"lab","currenttrial":63,"bonus":0,"data":[{"current_trial":0,"dateTime":1431972837173,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":1,"dateTime":1431972837176,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":2,"dateTime":1431972837176,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":3,"dateTime":1431972837176,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":4,"dateTime":1431972837176,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":5,"dateTime":1431972837176,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":6,"dateTime":1431972837176,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":7,"dateTime":1431972837176,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":8,"dateTime":1431972837182,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":9,"dateTime":1431972897587,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":10,"dateTime":1431972897589,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":11,"dateTime":1431972897589,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":12,"dateTime":1431972897589,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":13,"dateTime":1431972897589,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":14,"dateTime":1431972897589,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":15,"dateTime":1431972897589,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":16,"dateTime":1431972897590,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":17,"dateTime":1431972897601,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":18,"dateTime":1431974333865,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":19,"dateTime":1431974333867,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":20,"dateTime":1431974333867,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":21,"dateTime":1431974333867,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":22,"dateTime":1431974333867,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":23,"dateTime":1431974333867,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":24,"dateTime":1431974333867,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":25,"dateTime":1431974333867,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":26,"dateTime":1431974333875,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":27,"dateTime":1431974392973,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":28,"dateTime":1431974392975,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":29,"dateTime":1431974392975,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":30,"dateTime":1431974392976,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":31,"dateTime":1431974392976,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":32,"dateTime":1431974392976,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":33,"dateTime":1431974392976,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":34,"dateTime":1431974392976,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":35,"dateTime":1431974392986,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":36,"dateTime":1431974545730,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":37,"dateTime":1431974545732,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":38,"dateTime":1431974545732,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":39,"dateTime":1431974545732,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":40,"dateTime":1431974545732,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":41,"dateTime":1431974545732,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":42,"dateTime":1431974545733,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":43,"dateTime":1431974545733,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":44,"dateTime":1431974545739,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":45,"dateTime":1431974553798,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":46,"dateTime":1431974553800,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":47,"dateTime":1431974553800,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":48,"dateTime":1431974553800,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":49,"dateTime":1431974553801,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":50,"dateTime":1431974553801,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":51,"dateTime":1431974553801,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":52,"dateTime":1431974553801,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":53,"dateTime":1431974553806,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"uniqueid":"test2:lab","current_trial":54,"dateTime":1431974614977,"trialdata":["uniqueId","test2:lab"]},{"uniqueid":"test2:lab","current_trial":55,"dateTime":1431974614978,"trialdata":["condition",1]},{"uniqueid":"test2:lab","current_trial":56,"dateTime":1431974614979,"trialdata":["counterbalance",0]},{"uniqueid":"test2:lab","current_trial":57,"dateTime":1431974614979,"trialdata":["rule_cond","rb"]},{"uniqueid":"test2:lab","current_trial":58,"dateTime":1431974614979,"trialdata":["stim_cond","rectangle"]},{"uniqueid":"test2:lab","current_trial":59,"dateTime":1431974614979,"trialdata":["sel_cond","both"]},{"uniqueid":"test2:lab","current_trial":60,"dateTime":1431974614979,"trialdata":["dim_mapping",0]},{"uniqueid":"test2:lab","current_trial":61,"dateTime":1431974614979,"trialdata":["loading test sets from: static/testsets.csv"]},{"uniqueid":"test2:lab","current_trial":62,"dateTime":1431974614991,"trialdata":["COMPLETE"]}],"questiondata":{},"eventdata":[{"eventtype":"initialized","interval":0,"timestamp":1431972837089,"value":null},{"eventtype":"window_resize","interval":0,"timestamp":1431972837089,"value":[1157,451]},{"eventtype":"focus","interval":1716671,"timestamp":1431974553760,"value":"on"}],"useragent":""}
config
doug.markant
2015-05-18 20:45:26,328 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1478, in full_dispatch_request
    response = self.make_response(rv)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1566, in make_response
    raise ValueError('View function did not return a response')
ValueError: View function did not return a response
2015-05-18 20:49:33 [24835] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:33,584 Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:33 [24836] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:33,611 Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:33 [24837] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:33,630 Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:33 [24838] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:33,762 Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:33 [24839] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:33,830 Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:33 [24841] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:33,939 Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:33 [24842] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:33,946 Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:33 [24840] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:33,957 Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:34 [24843] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:34,014 Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:34 [24844] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:34,097 Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 72, in <module>
    launch()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 69, in launch
    ExperimentServer().run()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 143, in run
    Arbiter(self).run()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 203, in run
    self.halt(reason=inst.reason, exit_status=inst.exit_status)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 298, in halt
    self.stop()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 341, in stop
    self.reap_workers()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 452, in reap_workers
    raise HaltServer(reason, self.WORKER_BOOT_ERROR)
gunicorn.errors.HaltServer: <HaltServer 'Worker failed to boot.' 3>
2015-05-18 20:49:34 [24845] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:34,175 Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:34 [24846] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:34,211 Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:34 [24847] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:34,265 Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:34 [24848] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:34,283 Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:34 [24850] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:34,286 Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:34 [24851] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:34,291 Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:34 [24849] [ERROR] Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
2015-05-18 20:49:34,294 Exception in worker process:
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/arbiter.py", line 495, in spawn_worker
    worker.init_process()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/workers/base.py", line 106, in init_process
    self.wsgi = self.app.wsgi()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/app/base.py", line 114, in wsgi
    self.callable = self.load()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment_server.py", line 49, in load
    return util.import_app("psiturk.experiment:app")
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/gunicorn/util.py", line 354, in import_app
    __import__(module)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/psiturk/experiment.py", line 72, in <module>
    from custom import custom_code
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 178
    """



#----------------------------------------------
# example custom route
#----------------------------------------------
@custom_code.route('/my_custom_view')
def my_custom_view():
	current_app.logger.info("Reached /my_custom_view")  # Print message to server.log for debugging
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example using HTTP authentication
#----------------------------------------------
@custom_code.route('/my_password_protected_route')
@myauth.requires_auth
def my_password_protected_route():
	try:
		return render_template('custom.html')
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example accessing data
#----------------------------------------------
@custom_code.route('/view_data')
@myauth.requires_auth
def list_my_data():
        users = Participant.query.all()
	try:
		return render_template('list.html', participants=users)
	except TemplateNotFound:
		abort(404)

#----------------------------------------------
# example computing bonus
#----------------------------------------------

@custom_code.route('/compute_bonus', methods=['GET'])
def compute_bonus():
    # check that user provided the correct keys
    # errors will not be that gracefull here if being
    # accessed by the Javascrip client
    if not request.args.has_key('uniqueId'):
        raise ExperimentError('improper_inputs')  # i don't like returning HTML to JSON requests...  maybe should change this
    uniqueId = request.args['uniqueId']

    try:
        # lookup user in database
        user = Participant.query.\
               filter(Participant.uniqueid == uniqueId).\
               one()
        user_data = loads(user.datastring) # load datastring from JSON
        bonus = 0

        for record in user_data['data']: # for line in data file
            trial = record['trialdata']
            if trial['phase']=='TEST':
                if trial['hit']==True:
                    bonus += 0.02
        user.bonus = bonus
        db_session.add(user)
        db_session.commit()
        resp = {"bonusComputed": "success"}
        return jsonify(**resp)
    except:
        abort(404)  # again, bad to display HTML, but...
      



                                               
                      
                                               
                                     
                     
	                                                                                               
	    
		                                     
	                        
		          

                                               
                                   
                                               
                                                  
                     
                                  
	    
		                                     
	                        
		          

                                               
                        
                                               
                                
                     
                   
                                       
	    
		                                                       
	                        
		          

                                               
                         
                                               

                                                     
                    
                                               
                                                     
                                      
                                            
                                                                                                                             
                                       

        
                                 
                                  
                                                         
                    
                                                                      
                 

                                                                
                                       
                                      
                                      
                                 
                          
                            
                           
                                           
                              
           
                                                        ^
SyntaxError: EOF while scanning triple-quoted string literal
emailing result for uniqueId: test2:lab
[Subject(test2:lab, 1, 1, 1.0)]
{"condition":1,"counterbalance":0,"assignmentId":"lab","workerId":"test2","hitId":"lab","currenttrial":72,"bonus":0,"data":[{"current_trial":0,"dateTime":1431972837173,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":1,"dateTime":1431972837176,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":2,"dateTime":1431972837176,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":3,"dateTime":1431972837176,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":4,"dateTime":1431972837176,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":5,"dateTime":1431972837176,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":6,"dateTime":1431972837176,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":7,"dateTime":1431972837176,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":8,"dateTime":1431972837182,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":9,"dateTime":1431972897587,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":10,"dateTime":1431972897589,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":11,"dateTime":1431972897589,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":12,"dateTime":1431972897589,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":13,"dateTime":1431972897589,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":14,"dateTime":1431972897589,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":15,"dateTime":1431972897589,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":16,"dateTime":1431972897590,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":17,"dateTime":1431972897601,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":18,"dateTime":1431974333865,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":19,"dateTime":1431974333867,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":20,"dateTime":1431974333867,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":21,"dateTime":1431974333867,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":22,"dateTime":1431974333867,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":23,"dateTime":1431974333867,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":24,"dateTime":1431974333867,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":25,"dateTime":1431974333867,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":26,"dateTime":1431974333875,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":27,"dateTime":1431974392973,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":28,"dateTime":1431974392975,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":29,"dateTime":1431974392975,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":30,"dateTime":1431974392976,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":31,"dateTime":1431974392976,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":32,"dateTime":1431974392976,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":33,"dateTime":1431974392976,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":34,"dateTime":1431974392976,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":35,"dateTime":1431974392986,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":36,"dateTime":1431974545730,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":37,"dateTime":1431974545732,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":38,"dateTime":1431974545732,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":39,"dateTime":1431974545732,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":40,"dateTime":1431974545732,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":41,"dateTime":1431974545732,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":42,"dateTime":1431974545733,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":43,"dateTime":1431974545733,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":44,"dateTime":1431974545739,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":45,"dateTime":1431974553798,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":46,"dateTime":1431974553800,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":47,"dateTime":1431974553800,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":48,"dateTime":1431974553800,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":49,"dateTime":1431974553801,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":50,"dateTime":1431974553801,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":51,"dateTime":1431974553801,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":52,"dateTime":1431974553801,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":53,"dateTime":1431974553806,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":54,"dateTime":1431974614977,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":55,"dateTime":1431974614978,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":56,"dateTime":1431974614979,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":57,"dateTime":1431974614979,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":58,"dateTime":1431974614979,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":59,"dateTime":1431974614979,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":60,"dateTime":1431974614979,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":61,"dateTime":1431974614979,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":62,"dateTime":1431974614991,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"uniqueid":"test2:lab","current_trial":63,"dateTime":1431974726310,"trialdata":["uniqueId","test2:lab"]},{"uniqueid":"test2:lab","current_trial":64,"dateTime":1431974726312,"trialdata":["condition",1]},{"uniqueid":"test2:lab","current_trial":65,"dateTime":1431974726312,"trialdata":["counterbalance",0]},{"uniqueid":"test2:lab","current_trial":66,"dateTime":1431974726312,"trialdata":["rule_cond","rb"]},{"uniqueid":"test2:lab","current_trial":67,"dateTime":1431974726312,"trialdata":["stim_cond","rectangle"]},{"uniqueid":"test2:lab","current_trial":68,"dateTime":1431974726312,"trialdata":["sel_cond","both"]},{"uniqueid":"test2:lab","current_trial":69,"dateTime":1431974726312,"trialdata":["dim_mapping",1]},{"uniqueid":"test2:lab","current_trial":70,"dateTime":1431974726313,"trialdata":["loading test sets from: static/testsets.csv"]},{"uniqueid":"test2:lab","current_trial":71,"dateTime":1431974726319,"trialdata":["COMPLETE"]}],"questiondata":{},"eventdata":[{"eventtype":"initialized","interval":0,"timestamp":1431972837089,"value":null},{"eventtype":"window_resize","interval":0,"timestamp":1431972837089,"value":[1157,451]},{"eventtype":"focus","interval":1716671,"timestamp":1431974553760,"value":"on"}],"useragent":""}
From: doug.markant@yahoo.com
To: dmarkant@gmail.com
Subject: [webexp] new participant data for active rule learning
Date: 2015-05-18

Some details
can't send the Email
2015-05-18 20:49:57,273 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1478, in full_dispatch_request
    response = self.make_response(rv)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1566, in make_response
    raise ValueError('View function did not return a response')
ValueError: View function did not return a response
emailing result for uniqueId: test2:lab
[Subject(test2:lab, 1, 1, 1.0)]
{"condition":1,"counterbalance":0,"assignmentId":"lab","workerId":"test2","hitId":"lab","currenttrial":81,"bonus":0,"data":[{"current_trial":0,"dateTime":1431972837173,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":1,"dateTime":1431972837176,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":2,"dateTime":1431972837176,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":3,"dateTime":1431972837176,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":4,"dateTime":1431972837176,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":5,"dateTime":1431972837176,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":6,"dateTime":1431972837176,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":7,"dateTime":1431972837176,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":8,"dateTime":1431972837182,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":9,"dateTime":1431972897587,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":10,"dateTime":1431972897589,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":11,"dateTime":1431972897589,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":12,"dateTime":1431972897589,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":13,"dateTime":1431972897589,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":14,"dateTime":1431972897589,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":15,"dateTime":1431972897589,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":16,"dateTime":1431972897590,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":17,"dateTime":1431972897601,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":18,"dateTime":1431974333865,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":19,"dateTime":1431974333867,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":20,"dateTime":1431974333867,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":21,"dateTime":1431974333867,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":22,"dateTime":1431974333867,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":23,"dateTime":1431974333867,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":24,"dateTime":1431974333867,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":25,"dateTime":1431974333867,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":26,"dateTime":1431974333875,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":27,"dateTime":1431974392973,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":28,"dateTime":1431974392975,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":29,"dateTime":1431974392975,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":30,"dateTime":1431974392976,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":31,"dateTime":1431974392976,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":32,"dateTime":1431974392976,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":33,"dateTime":1431974392976,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":34,"dateTime":1431974392976,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":35,"dateTime":1431974392986,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":36,"dateTime":1431974545730,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":37,"dateTime":1431974545732,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":38,"dateTime":1431974545732,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":39,"dateTime":1431974545732,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":40,"dateTime":1431974545732,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":41,"dateTime":1431974545732,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":42,"dateTime":1431974545733,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":43,"dateTime":1431974545733,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":44,"dateTime":1431974545739,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":45,"dateTime":1431974553798,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":46,"dateTime":1431974553800,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":47,"dateTime":1431974553800,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":48,"dateTime":1431974553800,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":49,"dateTime":1431974553801,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":50,"dateTime":1431974553801,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":51,"dateTime":1431974553801,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":52,"dateTime":1431974553801,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":53,"dateTime":1431974553806,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":54,"dateTime":1431974614977,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":55,"dateTime":1431974614978,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":56,"dateTime":1431974614979,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":57,"dateTime":1431974614979,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":58,"dateTime":1431974614979,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":59,"dateTime":1431974614979,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":60,"dateTime":1431974614979,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":61,"dateTime":1431974614979,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":62,"dateTime":1431974614991,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":63,"dateTime":1431974726310,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":64,"dateTime":1431974726312,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":65,"dateTime":1431974726312,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":66,"dateTime":1431974726312,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":67,"dateTime":1431974726312,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":68,"dateTime":1431974726312,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":69,"dateTime":1431974726312,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":70,"dateTime":1431974726313,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":71,"dateTime":1431974726319,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"uniqueid":"test2:lab","current_trial":72,"dateTime":1431974994796,"trialdata":["uniqueId","test2:lab"]},{"uniqueid":"test2:lab","current_trial":73,"dateTime":1431974994798,"trialdata":["condition",1]},{"uniqueid":"test2:lab","current_trial":74,"dateTime":1431974994798,"trialdata":["counterbalance",0]},{"uniqueid":"test2:lab","current_trial":75,"dateTime":1431974994798,"trialdata":["rule_cond","rb"]},{"uniqueid":"test2:lab","current_trial":76,"dateTime":1431974994798,"trialdata":["stim_cond","rectangle"]},{"uniqueid":"test2:lab","current_trial":77,"dateTime":1431974994798,"trialdata":["sel_cond","both"]},{"uniqueid":"test2:lab","current_trial":78,"dateTime":1431974994799,"trialdata":["dim_mapping",1]},{"uniqueid":"test2:lab","current_trial":79,"dateTime":1431974994799,"trialdata":["loading test sets from: static/testsets.csv"]},{"uniqueid":"test2:lab","current_trial":80,"dateTime":1431974994807,"trialdata":["COMPLETE"]}],"questiondata":{},"eventdata":[{"eventtype":"initialized","interval":0,"timestamp":1431972837089,"value":null},{"eventtype":"window_resize","interval":0,"timestamp":1431972837089,"value":[1157,451]},{"eventtype":"focus","interval":1716671,"timestamp":1431974553760,"value":"on"}],"useragent":""}
From: doug.markant@yahoo.com
To: dmarkant@gmail.com
Subject: [webexp] new participant data for active rule learning
Date: 2015-05-18

Some details
can't send the Email
2015-05-18 20:51:33,938 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1478, in full_dispatch_request
    response = self.make_response(rv)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1566, in make_response
    raise ValueError('View function did not return a response')
ValueError: View function did not return a response
emailing result for uniqueId: test2:lab
[Subject(test2:lab, 1, 1, 1.0)]
{"condition":1,"counterbalance":0,"assignmentId":"lab","workerId":"test2","hitId":"lab","currenttrial":90,"bonus":0,"data":[{"current_trial":0,"dateTime":1431972837173,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":1,"dateTime":1431972837176,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":2,"dateTime":1431972837176,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":3,"dateTime":1431972837176,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":4,"dateTime":1431972837176,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":5,"dateTime":1431972837176,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":6,"dateTime":1431972837176,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":7,"dateTime":1431972837176,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":8,"dateTime":1431972837182,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":9,"dateTime":1431972897587,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":10,"dateTime":1431972897589,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":11,"dateTime":1431972897589,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":12,"dateTime":1431972897589,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":13,"dateTime":1431972897589,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":14,"dateTime":1431972897589,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":15,"dateTime":1431972897589,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":16,"dateTime":1431972897590,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":17,"dateTime":1431972897601,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":18,"dateTime":1431974333865,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":19,"dateTime":1431974333867,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":20,"dateTime":1431974333867,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":21,"dateTime":1431974333867,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":22,"dateTime":1431974333867,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":23,"dateTime":1431974333867,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":24,"dateTime":1431974333867,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":25,"dateTime":1431974333867,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":26,"dateTime":1431974333875,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":27,"dateTime":1431974392973,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":28,"dateTime":1431974392975,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":29,"dateTime":1431974392975,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":30,"dateTime":1431974392976,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":31,"dateTime":1431974392976,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":32,"dateTime":1431974392976,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":33,"dateTime":1431974392976,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":34,"dateTime":1431974392976,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":35,"dateTime":1431974392986,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":36,"dateTime":1431974545730,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":37,"dateTime":1431974545732,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":38,"dateTime":1431974545732,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":39,"dateTime":1431974545732,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":40,"dateTime":1431974545732,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":41,"dateTime":1431974545732,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":42,"dateTime":1431974545733,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":43,"dateTime":1431974545733,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":44,"dateTime":1431974545739,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":45,"dateTime":1431974553798,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":46,"dateTime":1431974553800,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":47,"dateTime":1431974553800,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":48,"dateTime":1431974553800,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":49,"dateTime":1431974553801,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":50,"dateTime":1431974553801,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":51,"dateTime":1431974553801,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":52,"dateTime":1431974553801,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":53,"dateTime":1431974553806,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":54,"dateTime":1431974614977,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":55,"dateTime":1431974614978,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":56,"dateTime":1431974614979,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":57,"dateTime":1431974614979,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":58,"dateTime":1431974614979,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":59,"dateTime":1431974614979,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":60,"dateTime":1431974614979,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":61,"dateTime":1431974614979,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":62,"dateTime":1431974614991,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":63,"dateTime":1431974726310,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":64,"dateTime":1431974726312,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":65,"dateTime":1431974726312,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":66,"dateTime":1431974726312,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":67,"dateTime":1431974726312,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":68,"dateTime":1431974726312,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":69,"dateTime":1431974726312,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":70,"dateTime":1431974726313,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":71,"dateTime":1431974726319,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":72,"dateTime":1431974994796,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":73,"dateTime":1431974994798,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":74,"dateTime":1431974994798,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":75,"dateTime":1431974994798,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":76,"dateTime":1431974994798,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":77,"dateTime":1431974994798,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":78,"dateTime":1431974994799,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":79,"dateTime":1431974994799,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":80,"dateTime":1431974994807,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"uniqueid":"test2:lab","current_trial":81,"dateTime":1431975093715,"trialdata":["uniqueId","test2:lab"]},{"uniqueid":"test2:lab","current_trial":82,"dateTime":1431975093717,"trialdata":["condition",1]},{"uniqueid":"test2:lab","current_trial":83,"dateTime":1431975093717,"trialdata":["counterbalance",0]},{"uniqueid":"test2:lab","current_trial":84,"dateTime":1431975093717,"trialdata":["rule_cond","rb"]},{"uniqueid":"test2:lab","current_trial":85,"dateTime":1431975093717,"trialdata":["stim_cond","rectangle"]},{"uniqueid":"test2:lab","current_trial":86,"dateTime":1431975093717,"trialdata":["sel_cond","both"]},{"uniqueid":"test2:lab","current_trial":87,"dateTime":1431975093718,"trialdata":["dim_mapping",0]},{"uniqueid":"test2:lab","current_trial":88,"dateTime":1431975093718,"trialdata":["loading test sets from: static/testsets.csv"]},{"uniqueid":"test2:lab","current_trial":89,"dateTime":1431975093723,"trialdata":["COMPLETE"]}],"questiondata":{},"eventdata":[{"eventtype":"initialized","interval":0,"timestamp":1431972837089,"value":null},{"eventtype":"window_resize","interval":0,"timestamp":1431972837089,"value":[1157,451]},{"eventtype":"focus","interval":1716671,"timestamp":1431974553760,"value":"on"}],"useragent":""}
From: doug.markant@yahoo.com
To: dmarkant@gmail.com
Subject: [webexp] new participant data for active rule learning
Date: 2015-05-18

Some details
can't send the Email
2015-05-18 20:52:34,984 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1478, in full_dispatch_request
    response = self.make_response(rv)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1566, in make_response
    raise ValueError('View function did not return a response')
ValueError: View function did not return a response
emailing result for uniqueId: test2:lab
[Subject(test2:lab, 1, 1, 1.0)]
{"condition":1,"counterbalance":0,"assignmentId":"lab","workerId":"test2","hitId":"lab","currenttrial":99,"bonus":0,"data":[{"current_trial":0,"dateTime":1431972837173,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":1,"dateTime":1431972837176,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":2,"dateTime":1431972837176,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":3,"dateTime":1431972837176,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":4,"dateTime":1431972837176,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":5,"dateTime":1431972837176,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":6,"dateTime":1431972837176,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":7,"dateTime":1431972837176,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":8,"dateTime":1431972837182,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":9,"dateTime":1431972897587,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":10,"dateTime":1431972897589,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":11,"dateTime":1431972897589,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":12,"dateTime":1431972897589,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":13,"dateTime":1431972897589,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":14,"dateTime":1431972897589,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":15,"dateTime":1431972897589,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":16,"dateTime":1431972897590,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":17,"dateTime":1431972897601,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":18,"dateTime":1431974333865,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":19,"dateTime":1431974333867,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":20,"dateTime":1431974333867,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":21,"dateTime":1431974333867,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":22,"dateTime":1431974333867,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":23,"dateTime":1431974333867,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":24,"dateTime":1431974333867,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":25,"dateTime":1431974333867,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":26,"dateTime":1431974333875,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":27,"dateTime":1431974392973,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":28,"dateTime":1431974392975,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":29,"dateTime":1431974392975,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":30,"dateTime":1431974392976,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":31,"dateTime":1431974392976,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":32,"dateTime":1431974392976,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":33,"dateTime":1431974392976,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":34,"dateTime":1431974392976,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":35,"dateTime":1431974392986,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":36,"dateTime":1431974545730,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":37,"dateTime":1431974545732,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":38,"dateTime":1431974545732,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":39,"dateTime":1431974545732,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":40,"dateTime":1431974545732,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":41,"dateTime":1431974545732,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":42,"dateTime":1431974545733,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":43,"dateTime":1431974545733,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":44,"dateTime":1431974545739,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":45,"dateTime":1431974553798,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":46,"dateTime":1431974553800,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":47,"dateTime":1431974553800,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":48,"dateTime":1431974553800,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":49,"dateTime":1431974553801,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":50,"dateTime":1431974553801,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":51,"dateTime":1431974553801,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":52,"dateTime":1431974553801,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":53,"dateTime":1431974553806,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":54,"dateTime":1431974614977,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":55,"dateTime":1431974614978,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":56,"dateTime":1431974614979,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":57,"dateTime":1431974614979,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":58,"dateTime":1431974614979,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":59,"dateTime":1431974614979,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":60,"dateTime":1431974614979,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":61,"dateTime":1431974614979,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":62,"dateTime":1431974614991,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":63,"dateTime":1431974726310,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":64,"dateTime":1431974726312,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":65,"dateTime":1431974726312,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":66,"dateTime":1431974726312,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":67,"dateTime":1431974726312,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":68,"dateTime":1431974726312,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":69,"dateTime":1431974726312,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":70,"dateTime":1431974726313,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":71,"dateTime":1431974726319,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":72,"dateTime":1431974994796,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":73,"dateTime":1431974994798,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":74,"dateTime":1431974994798,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":75,"dateTime":1431974994798,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":76,"dateTime":1431974994798,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":77,"dateTime":1431974994798,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":78,"dateTime":1431974994799,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":79,"dateTime":1431974994799,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":80,"dateTime":1431974994807,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":81,"dateTime":1431975093715,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":82,"dateTime":1431975093717,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":83,"dateTime":1431975093717,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":84,"dateTime":1431975093717,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":85,"dateTime":1431975093717,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":86,"dateTime":1431975093717,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":87,"dateTime":1431975093718,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":88,"dateTime":1431975093718,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":89,"dateTime":1431975093723,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"uniqueid":"test2:lab","current_trial":90,"dateTime":1431975154781,"trialdata":["uniqueId","test2:lab"]},{"uniqueid":"test2:lab","current_trial":91,"dateTime":1431975154782,"trialdata":["condition",1]},{"uniqueid":"test2:lab","current_trial":92,"dateTime":1431975154782,"trialdata":["counterbalance",0]},{"uniqueid":"test2:lab","current_trial":93,"dateTime":1431975154783,"trialdata":["rule_cond","rb"]},{"uniqueid":"test2:lab","current_trial":94,"dateTime":1431975154783,"trialdata":["stim_cond","rectangle"]},{"uniqueid":"test2:lab","current_trial":95,"dateTime":1431975154783,"trialdata":["sel_cond","both"]},{"uniqueid":"test2:lab","current_trial":96,"dateTime":1431975154783,"trialdata":["dim_mapping",0]},{"uniqueid":"test2:lab","current_trial":97,"dateTime":1431975154783,"trialdata":["loading test sets from: static/testsets.csv"]},{"uniqueid":"test2:lab","current_trial":98,"dateTime":1431975154790,"trialdata":["COMPLETE"]}],"questiondata":{},"eventdata":[{"eventtype":"initialized","interval":0,"timestamp":1431972837089,"value":null},{"eventtype":"window_resize","interval":0,"timestamp":1431972837089,"value":[1157,451]},{"eventtype":"focus","interval":1716671,"timestamp":1431974553760,"value":"on"}],"useragent":""}
From: doug.markant@yahoo.com
To: dmarkant@gmail.com
Subject: [webexp] new participant data for active rule learning
Date: 1/1/2015

Some details
can't send the Email
2015-05-18 20:53:53,790 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1478, in full_dispatch_request
    response = self.make_response(rv)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1566, in make_response
    raise ValueError('View function did not return a response')
ValueError: View function did not return a response
emailing result for uniqueId: test2:lab
[Subject(test2:lab, 1, 1, 1.0)]
{"condition":1,"counterbalance":0,"assignmentId":"lab","workerId":"test2","hitId":"lab","currenttrial":108,"bonus":0,"data":[{"current_trial":0,"dateTime":1431972837173,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":1,"dateTime":1431972837176,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":2,"dateTime":1431972837176,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":3,"dateTime":1431972837176,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":4,"dateTime":1431972837176,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":5,"dateTime":1431972837176,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":6,"dateTime":1431972837176,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":7,"dateTime":1431972837176,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":8,"dateTime":1431972837182,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":9,"dateTime":1431972897587,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":10,"dateTime":1431972897589,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":11,"dateTime":1431972897589,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":12,"dateTime":1431972897589,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":13,"dateTime":1431972897589,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":14,"dateTime":1431972897589,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":15,"dateTime":1431972897589,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":16,"dateTime":1431972897590,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":17,"dateTime":1431972897601,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":18,"dateTime":1431974333865,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":19,"dateTime":1431974333867,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":20,"dateTime":1431974333867,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":21,"dateTime":1431974333867,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":22,"dateTime":1431974333867,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":23,"dateTime":1431974333867,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":24,"dateTime":1431974333867,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":25,"dateTime":1431974333867,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":26,"dateTime":1431974333875,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":27,"dateTime":1431974392973,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":28,"dateTime":1431974392975,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":29,"dateTime":1431974392975,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":30,"dateTime":1431974392976,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":31,"dateTime":1431974392976,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":32,"dateTime":1431974392976,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":33,"dateTime":1431974392976,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":34,"dateTime":1431974392976,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":35,"dateTime":1431974392986,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":36,"dateTime":1431974545730,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":37,"dateTime":1431974545732,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":38,"dateTime":1431974545732,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":39,"dateTime":1431974545732,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":40,"dateTime":1431974545732,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":41,"dateTime":1431974545732,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":42,"dateTime":1431974545733,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":43,"dateTime":1431974545733,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":44,"dateTime":1431974545739,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":45,"dateTime":1431974553798,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":46,"dateTime":1431974553800,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":47,"dateTime":1431974553800,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":48,"dateTime":1431974553800,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":49,"dateTime":1431974553801,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":50,"dateTime":1431974553801,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":51,"dateTime":1431974553801,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":52,"dateTime":1431974553801,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":53,"dateTime":1431974553806,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":54,"dateTime":1431974614977,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":55,"dateTime":1431974614978,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":56,"dateTime":1431974614979,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":57,"dateTime":1431974614979,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":58,"dateTime":1431974614979,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":59,"dateTime":1431974614979,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":60,"dateTime":1431974614979,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":61,"dateTime":1431974614979,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":62,"dateTime":1431974614991,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":63,"dateTime":1431974726310,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":64,"dateTime":1431974726312,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":65,"dateTime":1431974726312,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":66,"dateTime":1431974726312,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":67,"dateTime":1431974726312,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":68,"dateTime":1431974726312,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":69,"dateTime":1431974726312,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":70,"dateTime":1431974726313,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":71,"dateTime":1431974726319,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":72,"dateTime":1431974994796,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":73,"dateTime":1431974994798,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":74,"dateTime":1431974994798,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":75,"dateTime":1431974994798,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":76,"dateTime":1431974994798,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":77,"dateTime":1431974994798,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":78,"dateTime":1431974994799,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":79,"dateTime":1431974994799,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":80,"dateTime":1431974994807,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":81,"dateTime":1431975093715,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":82,"dateTime":1431975093717,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":83,"dateTime":1431975093717,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":84,"dateTime":1431975093717,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":85,"dateTime":1431975093717,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":86,"dateTime":1431975093717,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":87,"dateTime":1431975093718,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":88,"dateTime":1431975093718,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":89,"dateTime":1431975093723,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":90,"dateTime":1431975154781,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":91,"dateTime":1431975154782,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":92,"dateTime":1431975154782,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":93,"dateTime":1431975154783,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":94,"dateTime":1431975154783,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":95,"dateTime":1431975154783,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":96,"dateTime":1431975154783,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":97,"dateTime":1431975154783,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":98,"dateTime":1431975154790,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"uniqueid":"test2:lab","current_trial":99,"dateTime":1431975233536,"trialdata":["uniqueId","test2:lab"]},{"uniqueid":"test2:lab","current_trial":100,"dateTime":1431975233538,"trialdata":["condition",1]},{"uniqueid":"test2:lab","current_trial":101,"dateTime":1431975233538,"trialdata":["counterbalance",0]},{"uniqueid":"test2:lab","current_trial":102,"dateTime":1431975233538,"trialdata":["rule_cond","rb"]},{"uniqueid":"test2:lab","current_trial":103,"dateTime":1431975233538,"trialdata":["stim_cond","rectangle"]},{"uniqueid":"test2:lab","current_trial":104,"dateTime":1431975233538,"trialdata":["sel_cond","both"]},{"uniqueid":"test2:lab","current_trial":105,"dateTime":1431975233538,"trialdata":["dim_mapping",0]},{"uniqueid":"test2:lab","current_trial":106,"dateTime":1431975233538,"trialdata":["loading test sets from: static/testsets.csv"]},{"uniqueid":"test2:lab","current_trial":107,"dateTime":1431975233548,"trialdata":["COMPLETE"]}],"questiondata":{},"eventdata":[{"eventtype":"initialized","interval":0,"timestamp":1431972837089,"value":null},{"eventtype":"window_resize","interval":0,"timestamp":1431972837089,"value":[1157,451]},{"eventtype":"focus","interval":1716671,"timestamp":1431974553760,"value":"on"}],"useragent":""}
From: doug.markant@yahoo.com
To: dmarkant@gmail.com
Subject: [webexp] new participant data for active rule learning
Date: 1/1/2015

Some details
can't send the Email
2015-05-18 20:54:38,973 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1478, in full_dispatch_request
    response = self.make_response(rv)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1566, in make_response
    raise ValueError('View function did not return a response')
ValueError: View function did not return a response
emailing result for uniqueId: test2:lab
[Subject(test2:lab, 1, 1, 1.0)]
{"condition":1,"counterbalance":0,"assignmentId":"lab","workerId":"test2","hitId":"lab","currenttrial":117,"bonus":0,"data":[{"current_trial":0,"dateTime":1431972837173,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":1,"dateTime":1431972837176,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":2,"dateTime":1431972837176,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":3,"dateTime":1431972837176,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":4,"dateTime":1431972837176,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":5,"dateTime":1431972837176,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":6,"dateTime":1431972837176,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":7,"dateTime":1431972837176,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":8,"dateTime":1431972837182,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":9,"dateTime":1431972897587,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":10,"dateTime":1431972897589,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":11,"dateTime":1431972897589,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":12,"dateTime":1431972897589,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":13,"dateTime":1431972897589,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":14,"dateTime":1431972897589,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":15,"dateTime":1431972897589,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":16,"dateTime":1431972897590,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":17,"dateTime":1431972897601,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":18,"dateTime":1431974333865,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":19,"dateTime":1431974333867,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":20,"dateTime":1431974333867,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":21,"dateTime":1431974333867,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":22,"dateTime":1431974333867,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":23,"dateTime":1431974333867,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":24,"dateTime":1431974333867,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":25,"dateTime":1431974333867,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":26,"dateTime":1431974333875,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":27,"dateTime":1431974392973,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":28,"dateTime":1431974392975,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":29,"dateTime":1431974392975,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":30,"dateTime":1431974392976,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":31,"dateTime":1431974392976,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":32,"dateTime":1431974392976,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":33,"dateTime":1431974392976,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":34,"dateTime":1431974392976,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":35,"dateTime":1431974392986,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":36,"dateTime":1431974545730,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":37,"dateTime":1431974545732,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":38,"dateTime":1431974545732,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":39,"dateTime":1431974545732,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":40,"dateTime":1431974545732,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":41,"dateTime":1431974545732,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":42,"dateTime":1431974545733,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":43,"dateTime":1431974545733,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":44,"dateTime":1431974545739,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":45,"dateTime":1431974553798,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":46,"dateTime":1431974553800,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":47,"dateTime":1431974553800,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":48,"dateTime":1431974553800,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":49,"dateTime":1431974553801,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":50,"dateTime":1431974553801,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":51,"dateTime":1431974553801,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":52,"dateTime":1431974553801,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":53,"dateTime":1431974553806,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":54,"dateTime":1431974614977,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":55,"dateTime":1431974614978,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":56,"dateTime":1431974614979,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":57,"dateTime":1431974614979,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":58,"dateTime":1431974614979,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":59,"dateTime":1431974614979,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":60,"dateTime":1431974614979,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":61,"dateTime":1431974614979,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":62,"dateTime":1431974614991,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":63,"dateTime":1431974726310,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":64,"dateTime":1431974726312,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":65,"dateTime":1431974726312,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":66,"dateTime":1431974726312,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":67,"dateTime":1431974726312,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":68,"dateTime":1431974726312,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":69,"dateTime":1431974726312,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":70,"dateTime":1431974726313,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":71,"dateTime":1431974726319,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":72,"dateTime":1431974994796,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":73,"dateTime":1431974994798,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":74,"dateTime":1431974994798,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":75,"dateTime":1431974994798,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":76,"dateTime":1431974994798,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":77,"dateTime":1431974994798,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":78,"dateTime":1431974994799,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":79,"dateTime":1431974994799,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":80,"dateTime":1431974994807,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":81,"dateTime":1431975093715,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":82,"dateTime":1431975093717,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":83,"dateTime":1431975093717,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":84,"dateTime":1431975093717,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":85,"dateTime":1431975093717,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":86,"dateTime":1431975093717,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":87,"dateTime":1431975093718,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":88,"dateTime":1431975093718,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":89,"dateTime":1431975093723,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":90,"dateTime":1431975154781,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":91,"dateTime":1431975154782,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":92,"dateTime":1431975154782,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":93,"dateTime":1431975154783,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":94,"dateTime":1431975154783,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":95,"dateTime":1431975154783,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":96,"dateTime":1431975154783,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":97,"dateTime":1431975154783,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":98,"dateTime":1431975154790,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":99,"dateTime":1431975233536,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":100,"dateTime":1431975233538,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":101,"dateTime":1431975233538,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":102,"dateTime":1431975233538,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":103,"dateTime":1431975233538,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":104,"dateTime":1431975233538,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":105,"dateTime":1431975233538,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":106,"dateTime":1431975233538,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":107,"dateTime":1431975233548,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"uniqueid":"test2:lab","current_trial":108,"dateTime":1431975275397,"trialdata":["uniqueId","test2:lab"]},{"uniqueid":"test2:lab","current_trial":109,"dateTime":1431975275399,"trialdata":["condition",1]},{"uniqueid":"test2:lab","current_trial":110,"dateTime":1431975275399,"trialdata":["counterbalance",0]},{"uniqueid":"test2:lab","current_trial":111,"dateTime":1431975275399,"trialdata":["rule_cond","rb"]},{"uniqueid":"test2:lab","current_trial":112,"dateTime":1431975275399,"trialdata":["stim_cond","rectangle"]},{"uniqueid":"test2:lab","current_trial":113,"dateTime":1431975275399,"trialdata":["sel_cond","both"]},{"uniqueid":"test2:lab","current_trial":114,"dateTime":1431975275399,"trialdata":["dim_mapping",1]},{"uniqueid":"test2:lab","current_trial":115,"dateTime":1431975275399,"trialdata":["loading test sets from: static/testsets.csv"]},{"uniqueid":"test2:lab","current_trial":116,"dateTime":1431975275410,"trialdata":["COMPLETE"]}],"questiondata":{},"eventdata":[{"eventtype":"initialized","interval":0,"timestamp":1431972837089,"value":null},{"eventtype":"window_resize","interval":0,"timestamp":1431972837089,"value":[1157,451]},{"eventtype":"focus","interval":1716671,"timestamp":1431974553760,"value":"on"}],"useragent":""}
From: doug.markant@yahoo.com
To: dmarkant@gmail.com
Subject: [webexp] new participant data for active rule learning
Date: 1/1/2015

Some details
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 STARTTLS\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
STARTTLS
send: 'STARTTLS\r\n'
reply: '220 2.0.0 Start TLS\r\n'
reply: retcode (220); Msg: 2.0.0 Start TLS
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE
send: 'AUTH PLAIN AGRvdWcubWFya2FudEB5YWhvby5jb20AcHFBLVhGQi1BM0stcjlz\r\n'
reply: '535 5.7.0 (#AUTH012) Incorrect username or password.\r\n'
reply: retcode (535); Msg: 5.7.0 (#AUTH012) Incorrect username or password.
send: 'quit\r\n'
reply: '221 2.0.0 Bye\r\n'
reply: retcode (221); Msg: 2.0.0 Bye
2015-05-18 20:58:44,068 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 124, in notify
    s.login(login, password)
  File "/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/smtplib.py", line 615, in login
    raise SMTPAuthenticationError(code, resp)
SMTPAuthenticationError: (535, '5.7.0 (#AUTH012) Incorrect username or password.')
emailing result for uniqueId: test2:lab
[Subject(test2:lab, 1, 1, 1.0)]
{"condition":1,"counterbalance":0,"assignmentId":"lab","workerId":"test2","hitId":"lab","currenttrial":126,"bonus":0,"data":[{"current_trial":0,"dateTime":1431972837173,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":1,"dateTime":1431972837176,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":2,"dateTime":1431972837176,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":3,"dateTime":1431972837176,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":4,"dateTime":1431972837176,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":5,"dateTime":1431972837176,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":6,"dateTime":1431972837176,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":7,"dateTime":1431972837176,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":8,"dateTime":1431972837182,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":9,"dateTime":1431972897587,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":10,"dateTime":1431972897589,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":11,"dateTime":1431972897589,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":12,"dateTime":1431972897589,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":13,"dateTime":1431972897589,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":14,"dateTime":1431972897589,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":15,"dateTime":1431972897589,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":16,"dateTime":1431972897590,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":17,"dateTime":1431972897601,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":18,"dateTime":1431974333865,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":19,"dateTime":1431974333867,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":20,"dateTime":1431974333867,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":21,"dateTime":1431974333867,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":22,"dateTime":1431974333867,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":23,"dateTime":1431974333867,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":24,"dateTime":1431974333867,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":25,"dateTime":1431974333867,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":26,"dateTime":1431974333875,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":27,"dateTime":1431974392973,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":28,"dateTime":1431974392975,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":29,"dateTime":1431974392975,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":30,"dateTime":1431974392976,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":31,"dateTime":1431974392976,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":32,"dateTime":1431974392976,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":33,"dateTime":1431974392976,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":34,"dateTime":1431974392976,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":35,"dateTime":1431974392986,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":36,"dateTime":1431974545730,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":37,"dateTime":1431974545732,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":38,"dateTime":1431974545732,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":39,"dateTime":1431974545732,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":40,"dateTime":1431974545732,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":41,"dateTime":1431974545732,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":42,"dateTime":1431974545733,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":43,"dateTime":1431974545733,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":44,"dateTime":1431974545739,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":45,"dateTime":1431974553798,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":46,"dateTime":1431974553800,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":47,"dateTime":1431974553800,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":48,"dateTime":1431974553800,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":49,"dateTime":1431974553801,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":50,"dateTime":1431974553801,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":51,"dateTime":1431974553801,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":52,"dateTime":1431974553801,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":53,"dateTime":1431974553806,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":54,"dateTime":1431974614977,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":55,"dateTime":1431974614978,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":56,"dateTime":1431974614979,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":57,"dateTime":1431974614979,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":58,"dateTime":1431974614979,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":59,"dateTime":1431974614979,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":60,"dateTime":1431974614979,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":61,"dateTime":1431974614979,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":62,"dateTime":1431974614991,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":63,"dateTime":1431974726310,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":64,"dateTime":1431974726312,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":65,"dateTime":1431974726312,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":66,"dateTime":1431974726312,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":67,"dateTime":1431974726312,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":68,"dateTime":1431974726312,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":69,"dateTime":1431974726312,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":70,"dateTime":1431974726313,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":71,"dateTime":1431974726319,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":72,"dateTime":1431974994796,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":73,"dateTime":1431974994798,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":74,"dateTime":1431974994798,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":75,"dateTime":1431974994798,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":76,"dateTime":1431974994798,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":77,"dateTime":1431974994798,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":78,"dateTime":1431974994799,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":79,"dateTime":1431974994799,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":80,"dateTime":1431974994807,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":81,"dateTime":1431975093715,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":82,"dateTime":1431975093717,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":83,"dateTime":1431975093717,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":84,"dateTime":1431975093717,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":85,"dateTime":1431975093717,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":86,"dateTime":1431975093717,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":87,"dateTime":1431975093718,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":88,"dateTime":1431975093718,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":89,"dateTime":1431975093723,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":90,"dateTime":1431975154781,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":91,"dateTime":1431975154782,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":92,"dateTime":1431975154782,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":93,"dateTime":1431975154783,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":94,"dateTime":1431975154783,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":95,"dateTime":1431975154783,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":96,"dateTime":1431975154783,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":97,"dateTime":1431975154783,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":98,"dateTime":1431975154790,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":99,"dateTime":1431975233536,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":100,"dateTime":1431975233538,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":101,"dateTime":1431975233538,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":102,"dateTime":1431975233538,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":103,"dateTime":1431975233538,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":104,"dateTime":1431975233538,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":105,"dateTime":1431975233538,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":106,"dateTime":1431975233538,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":107,"dateTime":1431975233548,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":108,"dateTime":1431975275397,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":109,"dateTime":1431975275399,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":110,"dateTime":1431975275399,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":111,"dateTime":1431975275399,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":112,"dateTime":1431975275399,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":113,"dateTime":1431975275399,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":114,"dateTime":1431975275399,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":115,"dateTime":1431975275399,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":116,"dateTime":1431975275410,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"uniqueid":"test2:lab","current_trial":117,"dateTime":1431975518241,"trialdata":["uniqueId","test2:lab"]},{"uniqueid":"test2:lab","current_trial":118,"dateTime":1431975518242,"trialdata":["condition",1]},{"uniqueid":"test2:lab","current_trial":119,"dateTime":1431975518243,"trialdata":["counterbalance",0]},{"uniqueid":"test2:lab","current_trial":120,"dateTime":1431975518243,"trialdata":["rule_cond","rb"]},{"uniqueid":"test2:lab","current_trial":121,"dateTime":1431975518243,"trialdata":["stim_cond","rectangle"]},{"uniqueid":"test2:lab","current_trial":122,"dateTime":1431975518243,"trialdata":["sel_cond","both"]},{"uniqueid":"test2:lab","current_trial":123,"dateTime":1431975518243,"trialdata":["dim_mapping",0]},{"uniqueid":"test2:lab","current_trial":124,"dateTime":1431975518243,"trialdata":["loading test sets from: static/testsets.csv"]},{"uniqueid":"test2:lab","current_trial":125,"dateTime":1431975518254,"trialdata":["COMPLETE"]}],"questiondata":{},"eventdata":[{"eventtype":"initialized","interval":0,"timestamp":1431972837089,"value":null},{"eventtype":"window_resize","interval":0,"timestamp":1431972837089,"value":[1157,451]},{"eventtype":"focus","interval":1716671,"timestamp":1431974553760,"value":"on"}],"useragent":""}
doug.markant@yahoo.com
pqA-XFB-A3K-r9s
From: doug.markant@yahoo.com
To: dmarkant@gmail.com
Subject: [webexp] new participant data for active rule learning
Date: 1/1/2015

Some details
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 STARTTLS\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
STARTTLS
send: 'STARTTLS\r\n'
reply: '220 2.0.0 Start TLS\r\n'
reply: retcode (220); Msg: 2.0.0 Start TLS
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE
send: 'AUTH PLAIN AGRvdWcubWFya2FudEB5YWhvby5jb20AcHFBLVhGQi1BM0stcjlz\r\n'
reply: '535 5.7.0 (#AUTH012) Incorrect username or password.\r\n'
reply: retcode (535); Msg: 5.7.0 (#AUTH012) Incorrect username or password.
send: 'quit\r\n'
reply: '221 2.0.0 Bye\r\n'
reply: retcode (221); Msg: 2.0.0 Bye
2015-05-18 20:59:18,916 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 127, in notify
    s.login(login, password)
  File "/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/smtplib.py", line 615, in login
    raise SMTPAuthenticationError(code, resp)
SMTPAuthenticationError: (535, '5.7.0 (#AUTH012) Incorrect username or password.')
emailing result for uniqueId: test2:lab
[Subject(test2:lab, 1, 1, 1.0)]
{"condition":1,"counterbalance":0,"assignmentId":"lab","workerId":"test2","hitId":"lab","currenttrial":135,"bonus":0,"data":[{"current_trial":0,"dateTime":1431972837173,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":1,"dateTime":1431972837176,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":2,"dateTime":1431972837176,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":3,"dateTime":1431972837176,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":4,"dateTime":1431972837176,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":5,"dateTime":1431972837176,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":6,"dateTime":1431972837176,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":7,"dateTime":1431972837176,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":8,"dateTime":1431972837182,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":9,"dateTime":1431972897587,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":10,"dateTime":1431972897589,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":11,"dateTime":1431972897589,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":12,"dateTime":1431972897589,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":13,"dateTime":1431972897589,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":14,"dateTime":1431972897589,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":15,"dateTime":1431972897589,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":16,"dateTime":1431972897590,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":17,"dateTime":1431972897601,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":18,"dateTime":1431974333865,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":19,"dateTime":1431974333867,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":20,"dateTime":1431974333867,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":21,"dateTime":1431974333867,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":22,"dateTime":1431974333867,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":23,"dateTime":1431974333867,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":24,"dateTime":1431974333867,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":25,"dateTime":1431974333867,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":26,"dateTime":1431974333875,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":27,"dateTime":1431974392973,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":28,"dateTime":1431974392975,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":29,"dateTime":1431974392975,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":30,"dateTime":1431974392976,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":31,"dateTime":1431974392976,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":32,"dateTime":1431974392976,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":33,"dateTime":1431974392976,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":34,"dateTime":1431974392976,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":35,"dateTime":1431974392986,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":36,"dateTime":1431974545730,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":37,"dateTime":1431974545732,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":38,"dateTime":1431974545732,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":39,"dateTime":1431974545732,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":40,"dateTime":1431974545732,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":41,"dateTime":1431974545732,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":42,"dateTime":1431974545733,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":43,"dateTime":1431974545733,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":44,"dateTime":1431974545739,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":45,"dateTime":1431974553798,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":46,"dateTime":1431974553800,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":47,"dateTime":1431974553800,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":48,"dateTime":1431974553800,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":49,"dateTime":1431974553801,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":50,"dateTime":1431974553801,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":51,"dateTime":1431974553801,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":52,"dateTime":1431974553801,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":53,"dateTime":1431974553806,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":54,"dateTime":1431974614977,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":55,"dateTime":1431974614978,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":56,"dateTime":1431974614979,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":57,"dateTime":1431974614979,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":58,"dateTime":1431974614979,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":59,"dateTime":1431974614979,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":60,"dateTime":1431974614979,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":61,"dateTime":1431974614979,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":62,"dateTime":1431974614991,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":63,"dateTime":1431974726310,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":64,"dateTime":1431974726312,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":65,"dateTime":1431974726312,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":66,"dateTime":1431974726312,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":67,"dateTime":1431974726312,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":68,"dateTime":1431974726312,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":69,"dateTime":1431974726312,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":70,"dateTime":1431974726313,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":71,"dateTime":1431974726319,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":72,"dateTime":1431974994796,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":73,"dateTime":1431974994798,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":74,"dateTime":1431974994798,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":75,"dateTime":1431974994798,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":76,"dateTime":1431974994798,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":77,"dateTime":1431974994798,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":78,"dateTime":1431974994799,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":79,"dateTime":1431974994799,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":80,"dateTime":1431974994807,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":81,"dateTime":1431975093715,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":82,"dateTime":1431975093717,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":83,"dateTime":1431975093717,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":84,"dateTime":1431975093717,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":85,"dateTime":1431975093717,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":86,"dateTime":1431975093717,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":87,"dateTime":1431975093718,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":88,"dateTime":1431975093718,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":89,"dateTime":1431975093723,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":90,"dateTime":1431975154781,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":91,"dateTime":1431975154782,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":92,"dateTime":1431975154782,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":93,"dateTime":1431975154783,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":94,"dateTime":1431975154783,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":95,"dateTime":1431975154783,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":96,"dateTime":1431975154783,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":97,"dateTime":1431975154783,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":98,"dateTime":1431975154790,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":99,"dateTime":1431975233536,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":100,"dateTime":1431975233538,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":101,"dateTime":1431975233538,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":102,"dateTime":1431975233538,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":103,"dateTime":1431975233538,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":104,"dateTime":1431975233538,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":105,"dateTime":1431975233538,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":106,"dateTime":1431975233538,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":107,"dateTime":1431975233548,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":108,"dateTime":1431975275397,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":109,"dateTime":1431975275399,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":110,"dateTime":1431975275399,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":111,"dateTime":1431975275399,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":112,"dateTime":1431975275399,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":113,"dateTime":1431975275399,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":114,"dateTime":1431975275399,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":115,"dateTime":1431975275399,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":116,"dateTime":1431975275410,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":117,"dateTime":1431975518241,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":118,"dateTime":1431975518242,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":119,"dateTime":1431975518243,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":120,"dateTime":1431975518243,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":121,"dateTime":1431975518243,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":122,"dateTime":1431975518243,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":123,"dateTime":1431975518243,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":124,"dateTime":1431975518243,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":125,"dateTime":1431975518254,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"uniqueid":"test2:lab","current_trial":126,"dateTime":1431975554667,"trialdata":["uniqueId","test2:lab"]},{"uniqueid":"test2:lab","current_trial":127,"dateTime":1431975554670,"trialdata":["condition",1]},{"uniqueid":"test2:lab","current_trial":128,"dateTime":1431975554670,"trialdata":["counterbalance",0]},{"uniqueid":"test2:lab","current_trial":129,"dateTime":1431975554670,"trialdata":["rule_cond","rb"]},{"uniqueid":"test2:lab","current_trial":130,"dateTime":1431975554670,"trialdata":["stim_cond","rectangle"]},{"uniqueid":"test2:lab","current_trial":131,"dateTime":1431975554670,"trialdata":["sel_cond","both"]},{"uniqueid":"test2:lab","current_trial":132,"dateTime":1431975554671,"trialdata":["dim_mapping",0]},{"uniqueid":"test2:lab","current_trial":133,"dateTime":1431975554671,"trialdata":["loading test sets from: static/testsets.csv"]},{"uniqueid":"test2:lab","current_trial":134,"dateTime":1431975554677,"trialdata":["COMPLETE"]}],"questiondata":{},"eventdata":[{"eventtype":"initialized","interval":0,"timestamp":1431972837089,"value":null},{"eventtype":"window_resize","interval":0,"timestamp":1431972837089,"value":[1157,451]},{"eventtype":"focus","interval":1716671,"timestamp":1431974553760,"value":"on"}],"useragent":""}
doug.markant@yahoo.com
Enz-8NZ-fpS-6Sv
From: doug.markant@yahoo.com
To: dmarkant@gmail.com
Subject: [webexp] new participant data for active rule learning
Date: 1/1/2015

Some details
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 STARTTLS\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
STARTTLS
send: 'STARTTLS\r\n'
reply: '220 2.0.0 Start TLS\r\n'
reply: retcode (220); Msg: 2.0.0 Start TLS
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE
send: 'AUTH PLAIN AGRvdWcubWFya2FudEB5YWhvby5jb20ARW56LThOWi1mcFMtNlN2\r\n'
reply: '235 2.0.0 OK\r\n'
reply: retcode (235); Msg: 2.0.0 OK
send: 'mail FROM:<doug.markant@yahoo.com> size=244\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
send: 'rcpt TO:<dmarkant@gmail.com>\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
send: 'data\r\n'
reply: '354 Start Mail. End with CRLF.CRLF\r\n'
reply: retcode (354); Msg: Start Mail. End with CRLF.CRLF
data: (354, 'Start Mail. End with CRLF.CRLF')
send: 'Content-Type: text/plain; charset="utf-8"\r\nMIME-Version: 1.0\r\nContent-Transfer-Encoding: base64\r\nSubject: =?utf-8?q?=5Bwebexp=5D_new_participant_data_for_active_rule_learning?=\r\nFrom: doug.markant@yahoo.com\r\nTo: dmarkant@gmail.com\r\n\r\nU29tZSBkZXRhaWxz\r\n.\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
data: (250, 'OK , completed')
send: 'quit\r\n'
reply: '221 Service Closing transmission\r\n'
reply: retcode (221); Msg: Service Closing transmission
2015-05-18 21:03:19,625 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1478, in full_dispatch_request
    response = self.make_response(rv)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1566, in make_response
    raise ValueError('View function did not return a response')
ValueError: View function did not return a response
emailing result for uniqueId: test2:lab
[Subject(test2:lab, 1, 1, 1.0)]
{"condition":1,"counterbalance":0,"assignmentId":"lab","workerId":"test2","hitId":"lab","currenttrial":144,"bonus":0,"data":[{"current_trial":0,"dateTime":1431972837173,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":1,"dateTime":1431972837176,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":2,"dateTime":1431972837176,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":3,"dateTime":1431972837176,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":4,"dateTime":1431972837176,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":5,"dateTime":1431972837176,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":6,"dateTime":1431972837176,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":7,"dateTime":1431972837176,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":8,"dateTime":1431972837182,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":9,"dateTime":1431972897587,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":10,"dateTime":1431972897589,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":11,"dateTime":1431972897589,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":12,"dateTime":1431972897589,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":13,"dateTime":1431972897589,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":14,"dateTime":1431972897589,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":15,"dateTime":1431972897589,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":16,"dateTime":1431972897590,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":17,"dateTime":1431972897601,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":18,"dateTime":1431974333865,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":19,"dateTime":1431974333867,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":20,"dateTime":1431974333867,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":21,"dateTime":1431974333867,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":22,"dateTime":1431974333867,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":23,"dateTime":1431974333867,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":24,"dateTime":1431974333867,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":25,"dateTime":1431974333867,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":26,"dateTime":1431974333875,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":27,"dateTime":1431974392973,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":28,"dateTime":1431974392975,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":29,"dateTime":1431974392975,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":30,"dateTime":1431974392976,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":31,"dateTime":1431974392976,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":32,"dateTime":1431974392976,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":33,"dateTime":1431974392976,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":34,"dateTime":1431974392976,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":35,"dateTime":1431974392986,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":36,"dateTime":1431974545730,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":37,"dateTime":1431974545732,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":38,"dateTime":1431974545732,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":39,"dateTime":1431974545732,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":40,"dateTime":1431974545732,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":41,"dateTime":1431974545732,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":42,"dateTime":1431974545733,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":43,"dateTime":1431974545733,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":44,"dateTime":1431974545739,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":45,"dateTime":1431974553798,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":46,"dateTime":1431974553800,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":47,"dateTime":1431974553800,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":48,"dateTime":1431974553800,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":49,"dateTime":1431974553801,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":50,"dateTime":1431974553801,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":51,"dateTime":1431974553801,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":52,"dateTime":1431974553801,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":53,"dateTime":1431974553806,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":54,"dateTime":1431974614977,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":55,"dateTime":1431974614978,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":56,"dateTime":1431974614979,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":57,"dateTime":1431974614979,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":58,"dateTime":1431974614979,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":59,"dateTime":1431974614979,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":60,"dateTime":1431974614979,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":61,"dateTime":1431974614979,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":62,"dateTime":1431974614991,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":63,"dateTime":1431974726310,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":64,"dateTime":1431974726312,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":65,"dateTime":1431974726312,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":66,"dateTime":1431974726312,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":67,"dateTime":1431974726312,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":68,"dateTime":1431974726312,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":69,"dateTime":1431974726312,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":70,"dateTime":1431974726313,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":71,"dateTime":1431974726319,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":72,"dateTime":1431974994796,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":73,"dateTime":1431974994798,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":74,"dateTime":1431974994798,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":75,"dateTime":1431974994798,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":76,"dateTime":1431974994798,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":77,"dateTime":1431974994798,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":78,"dateTime":1431974994799,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":79,"dateTime":1431974994799,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":80,"dateTime":1431974994807,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":81,"dateTime":1431975093715,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":82,"dateTime":1431975093717,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":83,"dateTime":1431975093717,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":84,"dateTime":1431975093717,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":85,"dateTime":1431975093717,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":86,"dateTime":1431975093717,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":87,"dateTime":1431975093718,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":88,"dateTime":1431975093718,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":89,"dateTime":1431975093723,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":90,"dateTime":1431975154781,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":91,"dateTime":1431975154782,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":92,"dateTime":1431975154782,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":93,"dateTime":1431975154783,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":94,"dateTime":1431975154783,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":95,"dateTime":1431975154783,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":96,"dateTime":1431975154783,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":97,"dateTime":1431975154783,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":98,"dateTime":1431975154790,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":99,"dateTime":1431975233536,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":100,"dateTime":1431975233538,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":101,"dateTime":1431975233538,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":102,"dateTime":1431975233538,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":103,"dateTime":1431975233538,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":104,"dateTime":1431975233538,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":105,"dateTime":1431975233538,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":106,"dateTime":1431975233538,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":107,"dateTime":1431975233548,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":108,"dateTime":1431975275397,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":109,"dateTime":1431975275399,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":110,"dateTime":1431975275399,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":111,"dateTime":1431975275399,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":112,"dateTime":1431975275399,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":113,"dateTime":1431975275399,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":114,"dateTime":1431975275399,"trialdata":["dim_mapping",1],"uniqueid":"test2:lab"},{"current_trial":115,"dateTime":1431975275399,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":116,"dateTime":1431975275410,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":117,"dateTime":1431975518241,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":118,"dateTime":1431975518242,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":119,"dateTime":1431975518243,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":120,"dateTime":1431975518243,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":121,"dateTime":1431975518243,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":122,"dateTime":1431975518243,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":123,"dateTime":1431975518243,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":124,"dateTime":1431975518243,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":125,"dateTime":1431975518254,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"current_trial":126,"dateTime":1431975554667,"trialdata":["uniqueId","test2:lab"],"uniqueid":"test2:lab"},{"current_trial":127,"dateTime":1431975554670,"trialdata":["condition",1],"uniqueid":"test2:lab"},{"current_trial":128,"dateTime":1431975554670,"trialdata":["counterbalance",0],"uniqueid":"test2:lab"},{"current_trial":129,"dateTime":1431975554670,"trialdata":["rule_cond","rb"],"uniqueid":"test2:lab"},{"current_trial":130,"dateTime":1431975554670,"trialdata":["stim_cond","rectangle"],"uniqueid":"test2:lab"},{"current_trial":131,"dateTime":1431975554670,"trialdata":["sel_cond","both"],"uniqueid":"test2:lab"},{"current_trial":132,"dateTime":1431975554671,"trialdata":["dim_mapping",0],"uniqueid":"test2:lab"},{"current_trial":133,"dateTime":1431975554671,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test2:lab"},{"current_trial":134,"dateTime":1431975554677,"trialdata":["COMPLETE"],"uniqueid":"test2:lab"},{"uniqueid":"test2:lab","current_trial":135,"dateTime":1431975797249,"trialdata":["uniqueId","test2:lab"]},{"uniqueid":"test2:lab","current_trial":136,"dateTime":1431975797251,"trialdata":["condition",1]},{"uniqueid":"test2:lab","current_trial":137,"dateTime":1431975797251,"trialdata":["counterbalance",0]},{"uniqueid":"test2:lab","current_trial":138,"dateTime":1431975797251,"trialdata":["rule_cond","rb"]},{"uniqueid":"test2:lab","current_trial":139,"dateTime":1431975797251,"trialdata":["stim_cond","rectangle"]},{"uniqueid":"test2:lab","current_trial":140,"dateTime":1431975797251,"trialdata":["sel_cond","both"]},{"uniqueid":"test2:lab","current_trial":141,"dateTime":1431975797251,"trialdata":["dim_mapping",1]},{"uniqueid":"test2:lab","current_trial":142,"dateTime":1431975797251,"trialdata":["loading test sets from: static/testsets.csv"]},{"uniqueid":"test2:lab","current_trial":143,"dateTime":1431975797262,"trialdata":["COMPLETE"]}],"questiondata":{},"eventdata":[{"eventtype":"initialized","interval":0,"timestamp":1431972837089,"value":null},{"eventtype":"window_resize","interval":0,"timestamp":1431972837089,"value":[1157,451]},{"eventtype":"focus","interval":1716671,"timestamp":1431974553760,"value":"on"}],"useragent":""}
2015-05-18 21:06:49,799 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 89, in notify
    message_text = 'Participant %s complete.' % user.workerid
AttributeError: 'list' object has no attribute 'workerid'
emailing result for uniqueId: test2:lab
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 STARTTLS\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
STARTTLS
send: 'STARTTLS\r\n'
reply: '220 2.0.0 Start TLS\r\n'
reply: retcode (220); Msg: 2.0.0 Start TLS
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE
send: 'AUTH PLAIN AGRvdWcubWFya2FudEB5YWhvby5jb20ARW56LThOWi1mcFMtNlN2\r\n'
reply: '235 2.0.0 OK\r\n'
reply: retcode (235); Msg: 2.0.0 OK
send: 'mail FROM:<doug.markant@yahoo.com> size=264\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
send: 'rcpt TO:<dmarkant@gmail.com>\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
send: 'data\r\n'
reply: '354 Start Mail. End with CRLF.CRLF\r\n'
reply: retcode (354); Msg: Start Mail. End with CRLF.CRLF
data: (354, 'Start Mail. End with CRLF.CRLF')
send: 'Content-Type: text/plain; charset="utf-8"\r\nMIME-Version: 1.0\r\nContent-Transfer-Encoding: base64\r\nSubject: =?utf-8?q?=5Bwebexp=5D_new_participant_data_for_active_rule_learning?=\r\nFrom: doug.markant@yahoo.com\r\nTo: dmarkant@gmail.com\r\n\r\nUGFydGljaXBhbnQgdGVzdDIgY29tcGxldGUu\r\n.\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
data: (250, 'OK , completed')
send: 'quit\r\n'
reply: '221 Service Closing transmission\r\n'
reply: retcode (221); Msg: Service Closing transmission
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25646)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25647)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25648)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25649)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25650)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25651)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25652)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25653)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25654)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25655)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25656)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25657)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25658)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25659)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25660)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25661)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25662)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25646)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25647)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25648)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25649)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25650)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25651)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25652)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25653)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25654)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25655)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25656)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25657)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25658)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25659)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25660)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25661)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25662)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25648)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25651)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25652)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25653)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25654)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25655)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25656)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25657)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25658)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25659)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25660)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25661)
2015-05-18 23:16:35 [25642] [CRITICAL] WORKER TIMEOUT (pid:25662)
emailing result for uniqueId: test7:lab
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 STARTTLS\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
STARTTLS
send: 'STARTTLS\r\n'
reply: '220 2.0.0 Start TLS\r\n'
reply: retcode (220); Msg: 2.0.0 Start TLS
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE
send: 'AUTH PLAIN AGRvdWcubWFya2FudEB5YWhvby5jb20ARW56LThOWi1mcFMtNlN2\r\n'
reply: '235 2.0.0 OK\r\n'
reply: retcode (235); Msg: 2.0.0 OK
send: 'mail FROM:<doug.markant@yahoo.com> size=227\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
send: 'rcpt TO:<dmarkant@gmail.com>\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
send: 'data\r\n'
reply: '354 Start Mail. End with CRLF.CRLF\r\n'
reply: retcode (354); Msg: Start Mail. End with CRLF.CRLF
data: (354, 'Start Mail. End with CRLF.CRLF')
send: 'Content-Type: text/plain; charset="utf-8"\r\nMIME-Version: 1.0\r\nContent-Transfer-Encoding: base64\r\nSubject: =?utf-8?q?=5Bwebexp=5D_new_participant_data_for_active_rule_learning?=\r\nFrom: doug.markant@yahoo.com\r\nTo: dmarkant@gmail.com\r\n\r\n.\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
data: (250, 'OK , completed')
send: 'quit\r\n'
reply: '221 Service Closing transmission\r\n'
reply: retcode (221); Msg: Service Closing transmission
emailing result for uniqueId: test7:lab
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 STARTTLS\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
STARTTLS
send: 'STARTTLS\r\n'
reply: '220 2.0.0 Start TLS\r\n'
reply: retcode (220); Msg: 2.0.0 Start TLS
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE
send: 'AUTH PLAIN AGRvdWcubWFya2FudEB5YWhvby5jb20ARW56LThOWi1mcFMtNlN2\r\n'
reply: '235 2.0.0 OK\r\n'
reply: retcode (235); Msg: 2.0.0 OK
send: 'mail FROM:<doug.markant@yahoo.com> size=1938\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
send: 'rcpt TO:<dmarkant@gmail.com>\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
send: 'data\r\n'
reply: '354 Start Mail. End with CRLF.CRLF\r\n'
reply: retcode (354); Msg: Start Mail. End with CRLF.CRLF
data: (354, 'Start Mail. End with CRLF.CRLF')
send: 'Content-Type: text/plain; charset="utf-8"\r\nMIME-Version: 1.0\r\nContent-Transfer-Encoding: base64\r\nSubject: =?utf-8?q?=5Bwebexp=5D_new_participant_data_for_active_rule_learning?=\r\nFrom: doug.markant@yahoo.com\r\nTo: dmarkant@gmail.com\r\n\r\neyJjb25kaXRpb24iOjEsImNvdW50ZXJiYWxhbmNlIjowLCJhc3NpZ25tZW50SWQiOiJsYWIiLCJ3\r\nb3JrZXJJZCI6InRlc3Q3IiwiaGl0SWQiOiJsYWIiLCJjdXJyZW50dHJpYWwiOjksImJvbnVzIjow\r\nLCJkYXRhIjpbeyJ1bmlxdWVpZCI6InRlc3Q3OmxhYiIsImN1cnJlbnRfdHJpYWwiOjAsImRhdGVU\r\naW1lIjoxNDMxOTgzODc0OTkyLCJ0cmlhbGRhdGEiOlsidW5pcXVlSWQiLCJ0ZXN0NzpsYWIiXX0s\r\neyJ1bmlxdWVpZCI6InRlc3Q3OmxhYiIsImN1cnJlbnRfdHJpYWwiOjEsImRhdGVUaW1lIjoxNDMx\r\nOTgzODc0OTk0LCJ0cmlhbGRhdGEiOlsiY29uZGl0aW9uIiwxXX0seyJ1bmlxdWVpZCI6InRlc3Q3\r\nOmxhYiIsImN1cnJlbnRfdHJpYWwiOjIsImRhdGVUaW1lIjoxNDMxOTgzODc0OTk0LCJ0cmlhbGRh\r\ndGEiOlsiY291bnRlcmJhbGFuY2UiLDBdfSx7InVuaXF1ZWlkIjoidGVzdDc6bGFiIiwiY3VycmVu\r\ndF90cmlhbCI6MywiZGF0ZVRpbWUiOjE0MzE5ODM4NzQ5OTQsInRyaWFsZGF0YSI6WyJydWxlX2Nv\r\nbmQiLCJyYiJdfSx7InVuaXF1ZWlkIjoidGVzdDc6bGFiIiwiY3VycmVudF90cmlhbCI6NCwiZGF0\r\nZVRpbWUiOjE0MzE5ODM4NzQ5OTUsInRyaWFsZGF0YSI6WyJzdGltX2NvbmQiLCJyZWN0YW5nbGUi\r\nXX0seyJ1bmlxdWVpZCI6InRlc3Q3OmxhYiIsImN1cnJlbnRfdHJpYWwiOjUsImRhdGVUaW1lIjox\r\nNDMxOTgzODc0OTk1LCJ0cmlhbGRhdGEiOlsic2VsX2NvbmQiLCJib3RoIl19LHsidW5pcXVlaWQi\r\nOiJ0ZXN0NzpsYWIiLCJjdXJyZW50X3RyaWFsIjo2LCJkYXRlVGltZSI6MTQzMTk4Mzg3NDk5NSwi\r\ndHJpYWxkYXRhIjpbImRpbV9tYXBwaW5nIiwxXX0seyJ1bmlxdWVpZCI6InRlc3Q3OmxhYiIsImN1\r\ncnJlbnRfdHJpYWwiOjcsImRhdGVUaW1lIjoxNDMxOTgzODc0OTk1LCJ0cmlhbGRhdGEiOlsibG9h\r\nZGluZyB0ZXN0IHNldHMgZnJvbTogc3RhdGljL3Rlc3RzZXRzLmNzdiJdfSx7InVuaXF1ZWlkIjoi\r\ndGVzdDc6bGFiIiwiY3VycmVudF90cmlhbCI6OCwiZGF0ZVRpbWUiOjE0MzE5ODM4NzUwMDIsInRy\r\naWFsZGF0YSI6WyJDT01QTEVURSJdfV0sInF1ZXN0aW9uZGF0YSI6e30sImV2ZW50ZGF0YSI6W3si\r\nZXZlbnR0eXBlIjoiaW5pdGlhbGl6ZWQiLCJ2YWx1ZSI6bnVsbCwidGltZXN0YW1wIjoxNDMxOTgz\r\nODc0ODkzLCJpbnRlcnZhbCI6MH0seyJldmVudHR5cGUiOiJ3aW5kb3dfcmVzaXplIiwidmFsdWUi\r\nOlsxMTU3LDQyOF0sInRpbWVzdGFtcCI6MTQzMTk4Mzg3NDg5MywiaW50ZXJ2YWwiOjB9XSwidXNl\r\ncmFnZW50IjoiIn0=\r\n.\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
data: (250, 'OK , completed')
send: 'quit\r\n'
reply: '221 Service Closing transmission\r\n'
reply: retcode (221); Msg: Service Closing transmission
emailing result for uniqueId: test7:lab
{"condition":1,"counterbalance":0,"assignmentId":"lab","workerId":"test7","hitId":"lab","currenttrial":18,"bonus":0,"data":[{"current_trial":0,"dateTime":1431983874992,"trialdata":["uniqueId","test7:lab"],"uniqueid":"test7:lab"},{"current_trial":1,"dateTime":1431983874994,"trialdata":["condition",1],"uniqueid":"test7:lab"},{"current_trial":2,"dateTime":1431983874994,"trialdata":["counterbalance",0],"uniqueid":"test7:lab"},{"current_trial":3,"dateTime":1431983874994,"trialdata":["rule_cond","rb"],"uniqueid":"test7:lab"},{"current_trial":4,"dateTime":1431983874995,"trialdata":["stim_cond","rectangle"],"uniqueid":"test7:lab"},{"current_trial":5,"dateTime":1431983874995,"trialdata":["sel_cond","both"],"uniqueid":"test7:lab"},{"current_trial":6,"dateTime":1431983874995,"trialdata":["dim_mapping",1],"uniqueid":"test7:lab"},{"current_trial":7,"dateTime":1431983874995,"trialdata":["loading test sets from: static/testsets.csv"],"uniqueid":"test7:lab"},{"current_trial":8,"dateTime":1431983875002,"trialdata":["COMPLETE"],"uniqueid":"test7:lab"},{"uniqueid":"test7:lab","current_trial":9,"dateTime":1431984193759,"trialdata":["uniqueId","test7:lab"]},{"uniqueid":"test7:lab","current_trial":10,"dateTime":1431984193762,"trialdata":["condition",1]},{"uniqueid":"test7:lab","current_trial":11,"dateTime":1431984193762,"trialdata":["counterbalance",0]},{"uniqueid":"test7:lab","current_trial":12,"dateTime":1431984193763,"trialdata":["rule_cond","rb"]},{"uniqueid":"test7:lab","current_trial":13,"dateTime":1431984193763,"trialdata":["stim_cond","rectangle"]},{"uniqueid":"test7:lab","current_trial":14,"dateTime":1431984193763,"trialdata":["sel_cond","both"]},{"uniqueid":"test7:lab","current_trial":15,"dateTime":1431984193763,"trialdata":["dim_mapping",1]},{"uniqueid":"test7:lab","current_trial":16,"dateTime":1431984193764,"trialdata":["loading test sets from: static/testsets.csv"]},{"uniqueid":"test7:lab","current_trial":17,"dateTime":1431984193774,"trialdata":["COMPLETE"]}],"questiondata":{},"eventdata":[{"eventtype":"initialized","interval":0,"timestamp":1431983874893,"value":null},{"eventtype":"window_resize","interval":0,"timestamp":1431983874893,"value":[1157,428]}],"useragent":""}
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 STARTTLS\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
STARTTLS
send: 'STARTTLS\r\n'
reply: '220 2.0.0 Start TLS\r\n'
reply: retcode (220); Msg: 2.0.0 Start TLS
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE
send: 'AUTH PLAIN AGRvdWcubWFya2FudEB5YWhvby5jb20ARW56LThOWi1mcFMtNlN2\r\n'
reply: '235 2.0.0 OK\r\n'
reply: retcode (235); Msg: 2.0.0 OK
send: 'mail FROM:<doug.markant@yahoo.com> size=3202\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
send: 'rcpt TO:<dmarkant@gmail.com>\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
send: 'data\r\n'
reply: '354 Start Mail. End with CRLF.CRLF\r\n'
reply: retcode (354); Msg: Start Mail. End with CRLF.CRLF
data: (354, 'Start Mail. End with CRLF.CRLF')
send: 'Content-Type: text/plain; charset="utf-8"\r\nMIME-Version: 1.0\r\nContent-Transfer-Encoding: base64\r\nSubject: =?utf-8?q?=5Bwebexp=5D_new_participant_data_for_active_rule_learning?=\r\nFrom: doug.markant@yahoo.com\r\nTo: dmarkant@gmail.com\r\n\r\neyJjb25kaXRpb24iOjEsImNvdW50ZXJiYWxhbmNlIjowLCJhc3NpZ25tZW50SWQiOiJsYWIiLCJ3\r\nb3JrZXJJZCI6InRlc3Q3IiwiaGl0SWQiOiJsYWIiLCJjdXJyZW50dHJpYWwiOjE4LCJib251cyI6\r\nMCwiZGF0YSI6W3siY3VycmVudF90cmlhbCI6MCwiZGF0ZVRpbWUiOjE0MzE5ODM4NzQ5OTIsInRy\r\naWFsZGF0YSI6WyJ1bmlxdWVJZCIsInRlc3Q3OmxhYiJdLCJ1bmlxdWVpZCI6InRlc3Q3OmxhYiJ9\r\nLHsiY3VycmVudF90cmlhbCI6MSwiZGF0ZVRpbWUiOjE0MzE5ODM4NzQ5OTQsInRyaWFsZGF0YSI6\r\nWyJjb25kaXRpb24iLDFdLCJ1bmlxdWVpZCI6InRlc3Q3OmxhYiJ9LHsiY3VycmVudF90cmlhbCI6\r\nMiwiZGF0ZVRpbWUiOjE0MzE5ODM4NzQ5OTQsInRyaWFsZGF0YSI6WyJjb3VudGVyYmFsYW5jZSIs\r\nMF0sInVuaXF1ZWlkIjoidGVzdDc6bGFiIn0seyJjdXJyZW50X3RyaWFsIjozLCJkYXRlVGltZSI6\r\nMTQzMTk4Mzg3NDk5NCwidHJpYWxkYXRhIjpbInJ1bGVfY29uZCIsInJiIl0sInVuaXF1ZWlkIjoi\r\ndGVzdDc6bGFiIn0seyJjdXJyZW50X3RyaWFsIjo0LCJkYXRlVGltZSI6MTQzMTk4Mzg3NDk5NSwi\r\ndHJpYWxkYXRhIjpbInN0aW1fY29uZCIsInJlY3RhbmdsZSJdLCJ1bmlxdWVpZCI6InRlc3Q3Omxh\r\nYiJ9LHsiY3VycmVudF90cmlhbCI6NSwiZGF0ZVRpbWUiOjE0MzE5ODM4NzQ5OTUsInRyaWFsZGF0\r\nYSI6WyJzZWxfY29uZCIsImJvdGgiXSwidW5pcXVlaWQiOiJ0ZXN0NzpsYWIifSx7ImN1cnJlbnRf\r\ndHJpYWwiOjYsImRhdGVUaW1lIjoxNDMxOTgzODc0OTk1LCJ0cmlhbGRhdGEiOlsiZGltX21hcHBp\r\nbmciLDFdLCJ1bmlxdWVpZCI6InRlc3Q3OmxhYiJ9LHsiY3VycmVudF90cmlhbCI6NywiZGF0ZVRp\r\nbWUiOjE0MzE5ODM4NzQ5OTUsInRyaWFsZGF0YSI6WyJsb2FkaW5nIHRlc3Qgc2V0cyBmcm9tOiBz\r\ndGF0aWMvdGVzdHNldHMuY3N2Il0sInVuaXF1ZWlkIjoidGVzdDc6bGFiIn0seyJjdXJyZW50X3Ry\r\naWFsIjo4LCJkYXRlVGltZSI6MTQzMTk4Mzg3NTAwMiwidHJpYWxkYXRhIjpbIkNPTVBMRVRFIl0s\r\nInVuaXF1ZWlkIjoidGVzdDc6bGFiIn0seyJ1bmlxdWVpZCI6InRlc3Q3OmxhYiIsImN1cnJlbnRf\r\ndHJpYWwiOjksImRhdGVUaW1lIjoxNDMxOTg0MTkzNzU5LCJ0cmlhbGRhdGEiOlsidW5pcXVlSWQi\r\nLCJ0ZXN0NzpsYWIiXX0seyJ1bmlxdWVpZCI6InRlc3Q3OmxhYiIsImN1cnJlbnRfdHJpYWwiOjEw\r\nLCJkYXRlVGltZSI6MTQzMTk4NDE5Mzc2MiwidHJpYWxkYXRhIjpbImNvbmRpdGlvbiIsMV19LHsi\r\ndW5pcXVlaWQiOiJ0ZXN0NzpsYWIiLCJjdXJyZW50X3RyaWFsIjoxMSwiZGF0ZVRpbWUiOjE0MzE5\r\nODQxOTM3NjIsInRyaWFsZGF0YSI6WyJjb3VudGVyYmFsYW5jZSIsMF19LHsidW5pcXVlaWQiOiJ0\r\nZXN0NzpsYWIiLCJjdXJyZW50X3RyaWFsIjoxMiwiZGF0ZVRpbWUiOjE0MzE5ODQxOTM3NjMsInRy\r\naWFsZGF0YSI6WyJydWxlX2NvbmQiLCJyYiJdfSx7InVuaXF1ZWlkIjoidGVzdDc6bGFiIiwiY3Vy\r\ncmVudF90cmlhbCI6MTMsImRhdGVUaW1lIjoxNDMxOTg0MTkzNzYzLCJ0cmlhbGRhdGEiOlsic3Rp\r\nbV9jb25kIiwicmVjdGFuZ2xlIl19LHsidW5pcXVlaWQiOiJ0ZXN0NzpsYWIiLCJjdXJyZW50X3Ry\r\naWFsIjoxNCwiZGF0ZVRpbWUiOjE0MzE5ODQxOTM3NjMsInRyaWFsZGF0YSI6WyJzZWxfY29uZCIs\r\nImJvdGgiXX0seyJ1bmlxdWVpZCI6InRlc3Q3OmxhYiIsImN1cnJlbnRfdHJpYWwiOjE1LCJkYXRl\r\nVGltZSI6MTQzMTk4NDE5Mzc2MywidHJpYWxkYXRhIjpbImRpbV9tYXBwaW5nIiwxXX0seyJ1bmlx\r\ndWVpZCI6InRlc3Q3OmxhYiIsImN1cnJlbnRfdHJpYWwiOjE2LCJkYXRlVGltZSI6MTQzMTk4NDE5\r\nMzc2NCwidHJpYWxkYXRhIjpbImxvYWRpbmcgdGVzdCBzZXRzIGZyb206IHN0YXRpYy90ZXN0c2V0\r\ncy5jc3YiXX0seyJ1bmlxdWVpZCI6InRlc3Q3OmxhYiIsImN1cnJlbnRfdHJpYWwiOjE3LCJkYXRl\r\nVGltZSI6MTQzMTk4NDE5Mzc3NCwidHJpYWxkYXRhIjpbIkNPTVBMRVRFIl19XSwicXVlc3Rpb25k\r\nYXRhIjp7fSwiZXZlbnRkYXRhIjpbeyJldmVudHR5cGUiOiJpbml0aWFsaXplZCIsImludGVydmFs\r\nIjowLCJ0aW1lc3RhbXAiOjE0MzE5ODM4NzQ4OTMsInZhbHVlIjpudWxsfSx7ImV2ZW50dHlwZSI6\r\nIndpbmRvd19yZXNpemUiLCJpbnRlcnZhbCI6MCwidGltZXN0YW1wIjoxNDMxOTgzODc0ODkzLCJ2\r\nYWx1ZSI6WzExNTcsNDI4XX1dLCJ1c2VyYWdlbnQiOiIifQ==\r\n.\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
data: (250, 'OK , completed')
send: 'quit\r\n'
reply: '221 Service Closing transmission\r\n'
reply: retcode (221); Msg: Service Closing transmission
emailing result for uniqueId: test7:lab
2015-05-18 23:24:52,906 Exception on /notify [GET]
Traceback (most recent call last):
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File "/Users/markant/code/python_envs/psiturk-dev/lib/python2.7/site-packages/flask/app.py", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/Users/markant/code/experiments/activeii-v0/custom.py", line 82, in notify
    print json.dumps(user.datastring)
NameError: global name 'json' is not defined
emailing result for uniqueId: test7:lab
"{\"condition\":1,\"counterbalance\":0,\"assignmentId\":\"lab\",\"workerId\":\"test7\",\"hitId\":\"lab\",\"currenttrial\":36,\"bonus\":0,\"data\":[{\"current_trial\":0,\"dateTime\":1431983874992,\"trialdata\":[\"uniqueId\",\"test7:lab\"],\"uniqueid\":\"test7:lab\"},{\"current_trial\":1,\"dateTime\":1431983874994,\"trialdata\":[\"condition\",1],\"uniqueid\":\"test7:lab\"},{\"current_trial\":2,\"dateTime\":1431983874994,\"trialdata\":[\"counterbalance\",0],\"uniqueid\":\"test7:lab\"},{\"current_trial\":3,\"dateTime\":1431983874994,\"trialdata\":[\"rule_cond\",\"rb\"],\"uniqueid\":\"test7:lab\"},{\"current_trial\":4,\"dateTime\":1431983874995,\"trialdata\":[\"stim_cond\",\"rectangle\"],\"uniqueid\":\"test7:lab\"},{\"current_trial\":5,\"dateTime\":1431983874995,\"trialdata\":[\"sel_cond\",\"both\"],\"uniqueid\":\"test7:lab\"},{\"current_trial\":6,\"dateTime\":1431983874995,\"trialdata\":[\"dim_mapping\",1],\"uniqueid\":\"test7:lab\"},{\"current_trial\":7,\"dateTime\":1431983874995,\"trialdata\":[\"loading test sets from: static/testsets.csv\"],\"uniqueid\":\"test7:lab\"},{\"current_trial\":8,\"dateTime\":1431983875002,\"trialdata\":[\"COMPLETE\"],\"uniqueid\":\"test7:lab\"},{\"current_trial\":9,\"dateTime\":1431984193759,\"trialdata\":[\"uniqueId\",\"test7:lab\"],\"uniqueid\":\"test7:lab\"},{\"current_trial\":10,\"dateTime\":1431984193762,\"trialdata\":[\"condition\",1],\"uniqueid\":\"test7:lab\"},{\"current_trial\":11,\"dateTime\":1431984193762,\"trialdata\":[\"counterbalance\",0],\"uniqueid\":\"test7:lab\"},{\"current_trial\":12,\"dateTime\":1431984193763,\"trialdata\":[\"rule_cond\",\"rb\"],\"uniqueid\":\"test7:lab\"},{\"current_trial\":13,\"dateTime\":1431984193763,\"trialdata\":[\"stim_cond\",\"rectangle\"],\"uniqueid\":\"test7:lab\"},{\"current_trial\":14,\"dateTime\":1431984193763,\"trialdata\":[\"sel_cond\",\"both\"],\"uniqueid\":\"test7:lab\"},{\"current_trial\":15,\"dateTime\":1431984193763,\"trialdata\":[\"dim_mapping\",1],\"uniqueid\":\"test7:lab\"},{\"current_trial\":16,\"dateTime\":1431984193764,\"trialdata\":[\"loading test sets from: static/testsets.csv\"],\"uniqueid\":\"test7:lab\"},{\"current_trial\":17,\"dateTime\":1431984193774,\"trialdata\":[\"COMPLETE\"],\"uniqueid\":\"test7:lab\"},{\"current_trial\":18,\"dateTime\":1431984236914,\"trialdata\":[\"uniqueId\",\"test7:lab\"],\"uniqueid\":\"test7:lab\"},{\"current_trial\":19,\"dateTime\":1431984236919,\"trialdata\":[\"condition\",1],\"uniqueid\":\"test7:lab\"},{\"current_trial\":20,\"dateTime\":1431984236919,\"trialdata\":[\"counterbalance\",0],\"uniqueid\":\"test7:lab\"},{\"current_trial\":21,\"dateTime\":1431984236919,\"trialdata\":[\"rule_cond\",\"rb\"],\"uniqueid\":\"test7:lab\"},{\"current_trial\":22,\"dateTime\":1431984236919,\"trialdata\":[\"stim_cond\",\"rectangle\"],\"uniqueid\":\"test7:lab\"},{\"current_trial\":23,\"dateTime\":1431984236919,\"trialdata\":[\"sel_cond\",\"both\"],\"uniqueid\":\"test7:lab\"},{\"current_trial\":24,\"dateTime\":1431984236920,\"trialdata\":[\"dim_mapping\",0],\"uniqueid\":\"test7:lab\"},{\"current_trial\":25,\"dateTime\":1431984236920,\"trialdata\":[\"loading test sets from: static/testsets.csv\"],\"uniqueid\":\"test7:lab\"},{\"current_trial\":26,\"dateTime\":1431984236926,\"trialdata\":[\"COMPLETE\"],\"uniqueid\":\"test7:lab\"},{\"uniqueid\":\"test7:lab\",\"current_trial\":27,\"dateTime\":1431984292890,\"trialdata\":[\"uniqueId\",\"test7:lab\"]},{\"uniqueid\":\"test7:lab\",\"current_trial\":28,\"dateTime\":1431984292891,\"trialdata\":[\"condition\",1]},{\"uniqueid\":\"test7:lab\",\"current_trial\":29,\"dateTime\":1431984292892,\"trialdata\":[\"counterbalance\",0]},{\"uniqueid\":\"test7:lab\",\"current_trial\":30,\"dateTime\":1431984292892,\"trialdata\":[\"rule_cond\",\"rb\"]},{\"uniqueid\":\"test7:lab\",\"current_trial\":31,\"dateTime\":1431984292892,\"trialdata\":[\"stim_cond\",\"rectangle\"]},{\"uniqueid\":\"test7:lab\",\"current_trial\":32,\"dateTime\":1431984292892,\"trialdata\":[\"sel_cond\",\"both\"]},{\"uniqueid\":\"test7:lab\",\"current_trial\":33,\"dateTime\":1431984292892,\"trialdata\":[\"dim_mapping\",0]},{\"uniqueid\":\"test7:lab\",\"current_trial\":34,\"dateTime\":1431984292892,\"trialdata\":[\"loading test sets from: static/testsets.csv\"]},{\"uniqueid\":\"test7:lab\",\"current_trial\":35,\"dateTime\":1431984292897,\"trialdata\":[\"COMPLETE\"]}],\"questiondata\":{},\"eventdata\":[{\"eventtype\":\"initialized\",\"interval\":0,\"timestamp\":1431983874893,\"value\":null},{\"eventtype\":\"window_resize\",\"interval\":0,\"timestamp\":1431983874893,\"value\":[1157,428]}],\"useragent\":\"\"}"
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 STARTTLS\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
STARTTLS
send: 'STARTTLS\r\n'
reply: '220 2.0.0 Start TLS\r\n'
reply: retcode (220); Msg: 2.0.0 Start TLS
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE
send: 'AUTH PLAIN AGRvdWcubWFya2FudEB5YWhvby5jb20ARW56LThOWi1mcFMtNlN2\r\n'
reply: '235 2.0.0 OK\r\n'
reply: retcode (235); Msg: 2.0.0 OK
send: 'mail FROM:<doug.markant@yahoo.com> size=5727\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
send: 'rcpt TO:<dmarkant@gmail.com>\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
send: 'data\r\n'
reply: '354 Start Mail. End with CRLF.CRLF\r\n'
reply: retcode (354); Msg: Start Mail. End with CRLF.CRLF
data: (354, 'Start Mail. End with CRLF.CRLF')
send: 'Content-Type: text/plain; charset="utf-8"\r\nMIME-Version: 1.0\r\nContent-Transfer-Encoding: base64\r\nSubject: =?utf-8?q?=5Bwebexp=5D_new_participant_data_for_active_rule_learning?=\r\nFrom: doug.markant@yahoo.com\r\nTo: dmarkant@gmail.com\r\n\r\neyJjb25kaXRpb24iOjEsImNvdW50ZXJiYWxhbmNlIjowLCJhc3NpZ25tZW50SWQiOiJsYWIiLCJ3\r\nb3JrZXJJZCI6InRlc3Q3IiwiaGl0SWQiOiJsYWIiLCJjdXJyZW50dHJpYWwiOjM2LCJib251cyI6\r\nMCwiZGF0YSI6W3siY3VycmVudF90cmlhbCI6MCwiZGF0ZVRpbWUiOjE0MzE5ODM4NzQ5OTIsInRy\r\naWFsZGF0YSI6WyJ1bmlxdWVJZCIsInRlc3Q3OmxhYiJdLCJ1bmlxdWVpZCI6InRlc3Q3OmxhYiJ9\r\nLHsiY3VycmVudF90cmlhbCI6MSwiZGF0ZVRpbWUiOjE0MzE5ODM4NzQ5OTQsInRyaWFsZGF0YSI6\r\nWyJjb25kaXRpb24iLDFdLCJ1bmlxdWVpZCI6InRlc3Q3OmxhYiJ9LHsiY3VycmVudF90cmlhbCI6\r\nMiwiZGF0ZVRpbWUiOjE0MzE5ODM4NzQ5OTQsInRyaWFsZGF0YSI6WyJjb3VudGVyYmFsYW5jZSIs\r\nMF0sInVuaXF1ZWlkIjoidGVzdDc6bGFiIn0seyJjdXJyZW50X3RyaWFsIjozLCJkYXRlVGltZSI6\r\nMTQzMTk4Mzg3NDk5NCwidHJpYWxkYXRhIjpbInJ1bGVfY29uZCIsInJiIl0sInVuaXF1ZWlkIjoi\r\ndGVzdDc6bGFiIn0seyJjdXJyZW50X3RyaWFsIjo0LCJkYXRlVGltZSI6MTQzMTk4Mzg3NDk5NSwi\r\ndHJpYWxkYXRhIjpbInN0aW1fY29uZCIsInJlY3RhbmdsZSJdLCJ1bmlxdWVpZCI6InRlc3Q3Omxh\r\nYiJ9LHsiY3VycmVudF90cmlhbCI6NSwiZGF0ZVRpbWUiOjE0MzE5ODM4NzQ5OTUsInRyaWFsZGF0\r\nYSI6WyJzZWxfY29uZCIsImJvdGgiXSwidW5pcXVlaWQiOiJ0ZXN0NzpsYWIifSx7ImN1cnJlbnRf\r\ndHJpYWwiOjYsImRhdGVUaW1lIjoxNDMxOTgzODc0OTk1LCJ0cmlhbGRhdGEiOlsiZGltX21hcHBp\r\nbmciLDFdLCJ1bmlxdWVpZCI6InRlc3Q3OmxhYiJ9LHsiY3VycmVudF90cmlhbCI6NywiZGF0ZVRp\r\nbWUiOjE0MzE5ODM4NzQ5OTUsInRyaWFsZGF0YSI6WyJsb2FkaW5nIHRlc3Qgc2V0cyBmcm9tOiBz\r\ndGF0aWMvdGVzdHNldHMuY3N2Il0sInVuaXF1ZWlkIjoidGVzdDc6bGFiIn0seyJjdXJyZW50X3Ry\r\naWFsIjo4LCJkYXRlVGltZSI6MTQzMTk4Mzg3NTAwMiwidHJpYWxkYXRhIjpbIkNPTVBMRVRFIl0s\r\nInVuaXF1ZWlkIjoidGVzdDc6bGFiIn0seyJjdXJyZW50X3RyaWFsIjo5LCJkYXRlVGltZSI6MTQz\r\nMTk4NDE5Mzc1OSwidHJpYWxkYXRhIjpbInVuaXF1ZUlkIiwidGVzdDc6bGFiIl0sInVuaXF1ZWlk\r\nIjoidGVzdDc6bGFiIn0seyJjdXJyZW50X3RyaWFsIjoxMCwiZGF0ZVRpbWUiOjE0MzE5ODQxOTM3\r\nNjIsInRyaWFsZGF0YSI6WyJjb25kaXRpb24iLDFdLCJ1bmlxdWVpZCI6InRlc3Q3OmxhYiJ9LHsi\r\nY3VycmVudF90cmlhbCI6MTEsImRhdGVUaW1lIjoxNDMxOTg0MTkzNzYyLCJ0cmlhbGRhdGEiOlsi\r\nY291bnRlcmJhbGFuY2UiLDBdLCJ1bmlxdWVpZCI6InRlc3Q3OmxhYiJ9LHsiY3VycmVudF90cmlh\r\nbCI6MTIsImRhdGVUaW1lIjoxNDMxOTg0MTkzNzYzLCJ0cmlhbGRhdGEiOlsicnVsZV9jb25kIiwi\r\ncmIiXSwidW5pcXVlaWQiOiJ0ZXN0NzpsYWIifSx7ImN1cnJlbnRfdHJpYWwiOjEzLCJkYXRlVGlt\r\nZSI6MTQzMTk4NDE5Mzc2MywidHJpYWxkYXRhIjpbInN0aW1fY29uZCIsInJlY3RhbmdsZSJdLCJ1\r\nbmlxdWVpZCI6InRlc3Q3OmxhYiJ9LHsiY3VycmVudF90cmlhbCI6MTQsImRhdGVUaW1lIjoxNDMx\r\nOTg0MTkzNzYzLCJ0cmlhbGRhdGEiOlsic2VsX2NvbmQiLCJib3RoIl0sInVuaXF1ZWlkIjoidGVz\r\ndDc6bGFiIn0seyJjdXJyZW50X3RyaWFsIjoxNSwiZGF0ZVRpbWUiOjE0MzE5ODQxOTM3NjMsInRy\r\naWFsZGF0YSI6WyJkaW1fbWFwcGluZyIsMV0sInVuaXF1ZWlkIjoidGVzdDc6bGFiIn0seyJjdXJy\r\nZW50X3RyaWFsIjoxNiwiZGF0ZVRpbWUiOjE0MzE5ODQxOTM3NjQsInRyaWFsZGF0YSI6WyJsb2Fk\r\naW5nIHRlc3Qgc2V0cyBmcm9tOiBzdGF0aWMvdGVzdHNldHMuY3N2Il0sInVuaXF1ZWlkIjoidGVz\r\ndDc6bGFiIn0seyJjdXJyZW50X3RyaWFsIjoxNywiZGF0ZVRpbWUiOjE0MzE5ODQxOTM3NzQsInRy\r\naWFsZGF0YSI6WyJDT01QTEVURSJdLCJ1bmlxdWVpZCI6InRlc3Q3OmxhYiJ9LHsiY3VycmVudF90\r\ncmlhbCI6MTgsImRhdGVUaW1lIjoxNDMxOTg0MjM2OTE0LCJ0cmlhbGRhdGEiOlsidW5pcXVlSWQi\r\nLCJ0ZXN0NzpsYWIiXSwidW5pcXVlaWQiOiJ0ZXN0NzpsYWIifSx7ImN1cnJlbnRfdHJpYWwiOjE5\r\nLCJkYXRlVGltZSI6MTQzMTk4NDIzNjkxOSwidHJpYWxkYXRhIjpbImNvbmRpdGlvbiIsMV0sInVu\r\naXF1ZWlkIjoidGVzdDc6bGFiIn0seyJjdXJyZW50X3RyaWFsIjoyMCwiZGF0ZVRpbWUiOjE0MzE5\r\nODQyMzY5MTksInRyaWFsZGF0YSI6WyJjb3VudGVyYmFsYW5jZSIsMF0sInVuaXF1ZWlkIjoidGVz\r\ndDc6bGFiIn0seyJjdXJyZW50X3RyaWFsIjoyMSwiZGF0ZVRpbWUiOjE0MzE5ODQyMzY5MTksInRy\r\naWFsZGF0YSI6WyJydWxlX2NvbmQiLCJyYiJdLCJ1bmlxdWVpZCI6InRlc3Q3OmxhYiJ9LHsiY3Vy\r\ncmVudF90cmlhbCI6MjIsImRhdGVUaW1lIjoxNDMxOTg0MjM2OTE5LCJ0cmlhbGRhdGEiOlsic3Rp\r\nbV9jb25kIiwicmVjdGFuZ2xlIl0sInVuaXF1ZWlkIjoidGVzdDc6bGFiIn0seyJjdXJyZW50X3Ry\r\naWFsIjoyMywiZGF0ZVRpbWUiOjE0MzE5ODQyMzY5MTksInRyaWFsZGF0YSI6WyJzZWxfY29uZCIs\r\nImJvdGgiXSwidW5pcXVlaWQiOiJ0ZXN0NzpsYWIifSx7ImN1cnJlbnRfdHJpYWwiOjI0LCJkYXRl\r\nVGltZSI6MTQzMTk4NDIzNjkyMCwidHJpYWxkYXRhIjpbImRpbV9tYXBwaW5nIiwwXSwidW5pcXVl\r\naWQiOiJ0ZXN0NzpsYWIifSx7ImN1cnJlbnRfdHJpYWwiOjI1LCJkYXRlVGltZSI6MTQzMTk4NDIz\r\nNjkyMCwidHJpYWxkYXRhIjpbImxvYWRpbmcgdGVzdCBzZXRzIGZyb206IHN0YXRpYy90ZXN0c2V0\r\ncy5jc3YiXSwidW5pcXVlaWQiOiJ0ZXN0NzpsYWIifSx7ImN1cnJlbnRfdHJpYWwiOjI2LCJkYXRl\r\nVGltZSI6MTQzMTk4NDIzNjkyNiwidHJpYWxkYXRhIjpbIkNPTVBMRVRFIl0sInVuaXF1ZWlkIjoi\r\ndGVzdDc6bGFiIn0seyJ1bmlxdWVpZCI6InRlc3Q3OmxhYiIsImN1cnJlbnRfdHJpYWwiOjI3LCJk\r\nYXRlVGltZSI6MTQzMTk4NDI5Mjg5MCwidHJpYWxkYXRhIjpbInVuaXF1ZUlkIiwidGVzdDc6bGFi\r\nIl19LHsidW5pcXVlaWQiOiJ0ZXN0NzpsYWIiLCJjdXJyZW50X3RyaWFsIjoyOCwiZGF0ZVRpbWUi\r\nOjE0MzE5ODQyOTI4OTEsInRyaWFsZGF0YSI6WyJjb25kaXRpb24iLDFdfSx7InVuaXF1ZWlkIjoi\r\ndGVzdDc6bGFiIiwiY3VycmVudF90cmlhbCI6MjksImRhdGVUaW1lIjoxNDMxOTg0MjkyODkyLCJ0\r\ncmlhbGRhdGEiOlsiY291bnRlcmJhbGFuY2UiLDBdfSx7InVuaXF1ZWlkIjoidGVzdDc6bGFiIiwi\r\nY3VycmVudF90cmlhbCI6MzAsImRhdGVUaW1lIjoxNDMxOTg0MjkyODkyLCJ0cmlhbGRhdGEiOlsi\r\ncnVsZV9jb25kIiwicmIiXX0seyJ1bmlxdWVpZCI6InRlc3Q3OmxhYiIsImN1cnJlbnRfdHJpYWwi\r\nOjMxLCJkYXRlVGltZSI6MTQzMTk4NDI5Mjg5MiwidHJpYWxkYXRhIjpbInN0aW1fY29uZCIsInJl\r\nY3RhbmdsZSJdfSx7InVuaXF1ZWlkIjoidGVzdDc6bGFiIiwiY3VycmVudF90cmlhbCI6MzIsImRh\r\ndGVUaW1lIjoxNDMxOTg0MjkyODkyLCJ0cmlhbGRhdGEiOlsic2VsX2NvbmQiLCJib3RoIl19LHsi\r\ndW5pcXVlaWQiOiJ0ZXN0NzpsYWIiLCJjdXJyZW50X3RyaWFsIjozMywiZGF0ZVRpbWUiOjE0MzE5\r\nODQyOTI4OTIsInRyaWFsZGF0YSI6WyJkaW1fbWFwcGluZyIsMF19LHsidW5pcXVlaWQiOiJ0ZXN0\r\nNzpsYWIiLCJjdXJyZW50X3RyaWFsIjozNCwiZGF0ZVRpbWUiOjE0MzE5ODQyOTI4OTIsInRyaWFs\r\nZGF0YSI6WyJsb2FkaW5nIHRlc3Qgc2V0cyBmcm9tOiBzdGF0aWMvdGVzdHNldHMuY3N2Il19LHsi\r\ndW5pcXVlaWQiOiJ0ZXN0NzpsYWIiLCJjdXJyZW50X3RyaWFsIjozNSwiZGF0ZVRpbWUiOjE0MzE5\r\nODQyOTI4OTcsInRyaWFsZGF0YSI6WyJDT01QTEVURSJdfV0sInF1ZXN0aW9uZGF0YSI6e30sImV2\r\nZW50ZGF0YSI6W3siZXZlbnR0eXBlIjoiaW5pdGlhbGl6ZWQiLCJpbnRlcnZhbCI6MCwidGltZXN0\r\nYW1wIjoxNDMxOTgzODc0ODkzLCJ2YWx1ZSI6bnVsbH0seyJldmVudHR5cGUiOiJ3aW5kb3dfcmVz\r\naXplIiwiaW50ZXJ2YWwiOjAsInRpbWVzdGFtcCI6MTQzMTk4Mzg3NDg5MywidmFsdWUiOlsxMTU3\r\nLDQyOF19XSwidXNlcmFnZW50IjoiIn0=\r\n.\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
data: (250, 'OK , completed')
send: 'quit\r\n'
reply: '221 Service Closing transmission\r\n'
reply: retcode (221); Msg: Service Closing transmission
emailing result for uniqueId: test7:lab
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 STARTTLS\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
STARTTLS
send: 'STARTTLS\r\n'
reply: '220 2.0.0 Start TLS\r\n'
reply: retcode (220); Msg: 2.0.0 Start TLS
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE
send: 'AUTH PLAIN AGRvdWcubWFya2FudEB5YWhvby5jb20ARW56LThOWi1mcFMtNlN2\r\n'
reply: '235 2.0.0 OK\r\n'
reply: retcode (235); Msg: 2.0.0 OK
send: 'mail FROM:<doug.markant@yahoo.com> size=7842\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
send: 'rcpt TO:<dmarkant@gmail.com>\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
send: 'data\r\n'
reply: '354 Start Mail. End with CRLF.CRLF\r\n'
reply: retcode (354); Msg: Start Mail. End with CRLF.CRLF
data: (354, 'Start Mail. End with CRLF.CRLF')
send: 'Content-Type: text/plain; charset="utf-8"\r\nMIME-Version: 1.0\r\nContent-Transfer-Encoding: base64\r\nSubject: =?utf-8?q?=5Bwebexp=5D_new_participant_data_for_active_rule_learning?=\r\nFrom: doug.markant@yahoo.com\r\nTo: dmarkant@gmail.com\r\n\r\nIntcImNvbmRpdGlvblwiOjEsXCJjb3VudGVyYmFsYW5jZVwiOjAsXCJhc3NpZ25tZW50SWRcIjpc\r\nImxhYlwiLFwid29ya2VySWRcIjpcInRlc3Q3XCIsXCJoaXRJZFwiOlwibGFiXCIsXCJjdXJyZW50\r\ndHJpYWxcIjo0NSxcImJvbnVzXCI6MCxcImRhdGFcIjpbe1wiY3VycmVudF90cmlhbFwiOjAsXCJk\r\nYXRlVGltZVwiOjE0MzE5ODM4NzQ5OTIsXCJ0cmlhbGRhdGFcIjpbXCJ1bmlxdWVJZFwiLFwidGVz\r\ndDc6bGFiXCJdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6\r\nMSxcImRhdGVUaW1lXCI6MTQzMTk4Mzg3NDk5NCxcInRyaWFsZGF0YVwiOltcImNvbmRpdGlvblwi\r\nLDFdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6MixcImRh\r\ndGVUaW1lXCI6MTQzMTk4Mzg3NDk5NCxcInRyaWFsZGF0YVwiOltcImNvdW50ZXJiYWxhbmNlXCIs\r\nMF0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJpYWxcIjozLFwiZGF0\r\nZVRpbWVcIjoxNDMxOTgzODc0OTk0LFwidHJpYWxkYXRhXCI6W1wicnVsZV9jb25kXCIsXCJyYlwi\r\nXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlhbFwiOjQsXCJkYXRl\r\nVGltZVwiOjE0MzE5ODM4NzQ5OTUsXCJ0cmlhbGRhdGFcIjpbXCJzdGltX2NvbmRcIixcInJlY3Rh\r\nbmdsZVwiXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlhbFwiOjUs\r\nXCJkYXRlVGltZVwiOjE0MzE5ODM4NzQ5OTUsXCJ0cmlhbGRhdGFcIjpbXCJzZWxfY29uZFwiLFwi\r\nYm90aFwiXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlhbFwiOjYs\r\nXCJkYXRlVGltZVwiOjE0MzE5ODM4NzQ5OTUsXCJ0cmlhbGRhdGFcIjpbXCJkaW1fbWFwcGluZ1wi\r\nLDFdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6NyxcImRh\r\ndGVUaW1lXCI6MTQzMTk4Mzg3NDk5NSxcInRyaWFsZGF0YVwiOltcImxvYWRpbmcgdGVzdCBzZXRz\r\nIGZyb206IHN0YXRpYy90ZXN0c2V0cy5jc3ZcIl0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9\r\nLHtcImN1cnJlbnRfdHJpYWxcIjo4LFwiZGF0ZVRpbWVcIjoxNDMxOTgzODc1MDAyLFwidHJpYWxk\r\nYXRhXCI6W1wiQ09NUExFVEVcIl0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJl\r\nbnRfdHJpYWxcIjo5LFwiZGF0ZVRpbWVcIjoxNDMxOTg0MTkzNzU5LFwidHJpYWxkYXRhXCI6W1wi\r\ndW5pcXVlSWRcIixcInRlc3Q3OmxhYlwiXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wi\r\nY3VycmVudF90cmlhbFwiOjEwLFwiZGF0ZVRpbWVcIjoxNDMxOTg0MTkzNzYyLFwidHJpYWxkYXRh\r\nXCI6W1wiY29uZGl0aW9uXCIsMV0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJl\r\nbnRfdHJpYWxcIjoxMSxcImRhdGVUaW1lXCI6MTQzMTk4NDE5Mzc2MixcInRyaWFsZGF0YVwiOltc\r\nImNvdW50ZXJiYWxhbmNlXCIsMF0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJl\r\nbnRfdHJpYWxcIjoxMixcImRhdGVUaW1lXCI6MTQzMTk4NDE5Mzc2MyxcInRyaWFsZGF0YVwiOltc\r\nInJ1bGVfY29uZFwiLFwicmJcIl0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJl\r\nbnRfdHJpYWxcIjoxMyxcImRhdGVUaW1lXCI6MTQzMTk4NDE5Mzc2MyxcInRyaWFsZGF0YVwiOltc\r\nInN0aW1fY29uZFwiLFwicmVjdGFuZ2xlXCJdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7\r\nXCJjdXJyZW50X3RyaWFsXCI6MTQsXCJkYXRlVGltZVwiOjE0MzE5ODQxOTM3NjMsXCJ0cmlhbGRh\r\ndGFcIjpbXCJzZWxfY29uZFwiLFwiYm90aFwiXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0s\r\ne1wiY3VycmVudF90cmlhbFwiOjE1LFwiZGF0ZVRpbWVcIjoxNDMxOTg0MTkzNzYzLFwidHJpYWxk\r\nYXRhXCI6W1wiZGltX21hcHBpbmdcIiwxXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wi\r\nY3VycmVudF90cmlhbFwiOjE2LFwiZGF0ZVRpbWVcIjoxNDMxOTg0MTkzNzY0LFwidHJpYWxkYXRh\r\nXCI6W1wibG9hZGluZyB0ZXN0IHNldHMgZnJvbTogc3RhdGljL3Rlc3RzZXRzLmNzdlwiXSxcInVu\r\naXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlhbFwiOjE3LFwiZGF0ZVRpbWVc\r\nIjoxNDMxOTg0MTkzNzc0LFwidHJpYWxkYXRhXCI6W1wiQ09NUExFVEVcIl0sXCJ1bmlxdWVpZFwi\r\nOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJpYWxcIjoxOCxcImRhdGVUaW1lXCI6MTQzMTk4\r\nNDIzNjkxNCxcInRyaWFsZGF0YVwiOltcInVuaXF1ZUlkXCIsXCJ0ZXN0NzpsYWJcIl0sXCJ1bmlx\r\ndWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJpYWxcIjoxOSxcImRhdGVUaW1lXCI6\r\nMTQzMTk4NDIzNjkxOSxcInRyaWFsZGF0YVwiOltcImNvbmRpdGlvblwiLDFdLFwidW5pcXVlaWRc\r\nIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6MjAsXCJkYXRlVGltZVwiOjE0MzE5\r\nODQyMzY5MTksXCJ0cmlhbGRhdGFcIjpbXCJjb3VudGVyYmFsYW5jZVwiLDBdLFwidW5pcXVlaWRc\r\nIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6MjEsXCJkYXRlVGltZVwiOjE0MzE5\r\nODQyMzY5MTksXCJ0cmlhbGRhdGFcIjpbXCJydWxlX2NvbmRcIixcInJiXCJdLFwidW5pcXVlaWRc\r\nIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6MjIsXCJkYXRlVGltZVwiOjE0MzE5\r\nODQyMzY5MTksXCJ0cmlhbGRhdGFcIjpbXCJzdGltX2NvbmRcIixcInJlY3RhbmdsZVwiXSxcInVu\r\naXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlhbFwiOjIzLFwiZGF0ZVRpbWVc\r\nIjoxNDMxOTg0MjM2OTE5LFwidHJpYWxkYXRhXCI6W1wic2VsX2NvbmRcIixcImJvdGhcIl0sXCJ1\r\nbmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJpYWxcIjoyNCxcImRhdGVUaW1l\r\nXCI6MTQzMTk4NDIzNjkyMCxcInRyaWFsZGF0YVwiOltcImRpbV9tYXBwaW5nXCIsMF0sXCJ1bmlx\r\ndWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJpYWxcIjoyNSxcImRhdGVUaW1lXCI6\r\nMTQzMTk4NDIzNjkyMCxcInRyaWFsZGF0YVwiOltcImxvYWRpbmcgdGVzdCBzZXRzIGZyb206IHN0\r\nYXRpYy90ZXN0c2V0cy5jc3ZcIl0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJl\r\nbnRfdHJpYWxcIjoyNixcImRhdGVUaW1lXCI6MTQzMTk4NDIzNjkyNixcInRyaWFsZGF0YVwiOltc\r\nIkNPTVBMRVRFXCJdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFs\r\nXCI6MjcsXCJkYXRlVGltZVwiOjE0MzE5ODQyOTI4OTAsXCJ0cmlhbGRhdGFcIjpbXCJ1bmlxdWVJ\r\nZFwiLFwidGVzdDc6bGFiXCJdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50\r\nX3RyaWFsXCI6MjgsXCJkYXRlVGltZVwiOjE0MzE5ODQyOTI4OTEsXCJ0cmlhbGRhdGFcIjpbXCJj\r\nb25kaXRpb25cIiwxXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlh\r\nbFwiOjI5LFwiZGF0ZVRpbWVcIjoxNDMxOTg0MjkyODkyLFwidHJpYWxkYXRhXCI6W1wiY291bnRl\r\ncmJhbGFuY2VcIiwwXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlh\r\nbFwiOjMwLFwiZGF0ZVRpbWVcIjoxNDMxOTg0MjkyODkyLFwidHJpYWxkYXRhXCI6W1wicnVsZV9j\r\nb25kXCIsXCJyYlwiXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlh\r\nbFwiOjMxLFwiZGF0ZVRpbWVcIjoxNDMxOTg0MjkyODkyLFwidHJpYWxkYXRhXCI6W1wic3RpbV9j\r\nb25kXCIsXCJyZWN0YW5nbGVcIl0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJl\r\nbnRfdHJpYWxcIjozMixcImRhdGVUaW1lXCI6MTQzMTk4NDI5Mjg5MixcInRyaWFsZGF0YVwiOltc\r\nInNlbF9jb25kXCIsXCJib3RoXCJdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJy\r\nZW50X3RyaWFsXCI6MzMsXCJkYXRlVGltZVwiOjE0MzE5ODQyOTI4OTIsXCJ0cmlhbGRhdGFcIjpb\r\nXCJkaW1fbWFwcGluZ1wiLDBdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50\r\nX3RyaWFsXCI6MzQsXCJkYXRlVGltZVwiOjE0MzE5ODQyOTI4OTIsXCJ0cmlhbGRhdGFcIjpbXCJs\r\nb2FkaW5nIHRlc3Qgc2V0cyBmcm9tOiBzdGF0aWMvdGVzdHNldHMuY3N2XCJdLFwidW5pcXVlaWRc\r\nIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6MzUsXCJkYXRlVGltZVwiOjE0MzE5\r\nODQyOTI4OTcsXCJ0cmlhbGRhdGFcIjpbXCJDT01QTEVURVwiXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0\r\nNzpsYWJcIn0se1widW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwiLFwiY3VycmVudF90cmlhbFwiOjM2\r\nLFwiZGF0ZVRpbWVcIjoxNDMxOTg0MzE4ODA4LFwidHJpYWxkYXRhXCI6W1widW5pcXVlSWRcIixc\r\nInRlc3Q3OmxhYlwiXX0se1widW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwiLFwiY3VycmVudF90cmlh\r\nbFwiOjM3LFwiZGF0ZVRpbWVcIjoxNDMxOTg0MzE4ODExLFwidHJpYWxkYXRhXCI6W1wiY29uZGl0\r\naW9uXCIsMV19LHtcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIixcImN1cnJlbnRfdHJpYWxcIjoz\r\nOCxcImRhdGVUaW1lXCI6MTQzMTk4NDMxODgxMSxcInRyaWFsZGF0YVwiOltcImNvdW50ZXJiYWxh\r\nbmNlXCIsMF19LHtcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIixcImN1cnJlbnRfdHJpYWxcIjoz\r\nOSxcImRhdGVUaW1lXCI6MTQzMTk4NDMxODgxMSxcInRyaWFsZGF0YVwiOltcInJ1bGVfY29uZFwi\r\nLFwicmJcIl19LHtcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIixcImN1cnJlbnRfdHJpYWxcIjo0\r\nMCxcImRhdGVUaW1lXCI6MTQzMTk4NDMxODgxMSxcInRyaWFsZGF0YVwiOltcInN0aW1fY29uZFwi\r\nLFwicmVjdGFuZ2xlXCJdfSx7XCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCIsXCJjdXJyZW50X3Ry\r\naWFsXCI6NDEsXCJkYXRlVGltZVwiOjE0MzE5ODQzMTg4MTEsXCJ0cmlhbGRhdGFcIjpbXCJzZWxf\r\nY29uZFwiLFwiYm90aFwiXX0se1widW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwiLFwiY3VycmVudF90\r\ncmlhbFwiOjQyLFwiZGF0ZVRpbWVcIjoxNDMxOTg0MzE4ODEyLFwidHJpYWxkYXRhXCI6W1wiZGlt\r\nX21hcHBpbmdcIiwxXX0se1widW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwiLFwiY3VycmVudF90cmlh\r\nbFwiOjQzLFwiZGF0ZVRpbWVcIjoxNDMxOTg0MzE4ODEyLFwidHJpYWxkYXRhXCI6W1wibG9hZGlu\r\nZyB0ZXN0IHNldHMgZnJvbTogc3RhdGljL3Rlc3RzZXRzLmNzdlwiXX0se1widW5pcXVlaWRcIjpc\r\nInRlc3Q3OmxhYlwiLFwiY3VycmVudF90cmlhbFwiOjQ0LFwiZGF0ZVRpbWVcIjoxNDMxOTg0MzE4\r\nODE3LFwidHJpYWxkYXRhXCI6W1wiQ09NUExFVEVcIl19XSxcInF1ZXN0aW9uZGF0YVwiOnt9LFwi\r\nZXZlbnRkYXRhXCI6W3tcImV2ZW50dHlwZVwiOlwiaW5pdGlhbGl6ZWRcIixcImludGVydmFsXCI6\r\nMCxcInRpbWVzdGFtcFwiOjE0MzE5ODM4NzQ4OTMsXCJ2YWx1ZVwiOm51bGx9LHtcImV2ZW50dHlw\r\nZVwiOlwid2luZG93X3Jlc2l6ZVwiLFwiaW50ZXJ2YWxcIjowLFwidGltZXN0YW1wXCI6MTQzMTk4\r\nMzg3NDg5MyxcInZhbHVlXCI6WzExNTcsNDI4XX1dLFwidXNlcmFnZW50XCI6XCJcIn0i\r\n.\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
data: (250, 'OK , completed')
send: 'quit\r\n'
reply: '221 Service Closing transmission\r\n'
reply: retcode (221); Msg: Service Closing transmission
emailing result for uniqueId: test7:lab
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 STARTTLS\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
STARTTLS
send: 'STARTTLS\r\n'
reply: '220 2.0.0 Start TLS\r\n'
reply: retcode (220); Msg: 2.0.0 Start TLS
send: 'ehlo a.5.e.4.d.9.e.f.f.f.8.0.3.0.2.6.0.0.0.0.0.0.0.0.0.0.0.0.0.8.e.f.ip6.arpa\r\n'
reply: '250-smtp.mail.yahoo.com\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-SIZE 41697280\r\n'
reply: '250-8 BITMIME\r\n'
reply: '250 AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE\r\n'
reply: retcode (250); Msg: smtp.mail.yahoo.com
PIPELINING
SIZE 41697280
8 BITMIME
AUTH PLAIN LOGIN XOAUTH2 XYMCOOKIE
send: 'AUTH PLAIN AGRvdWcubWFya2FudEB5YWhvby5jb20ARW56LThOWi1mcFMtNlN2\r\n'
reply: '235 2.0.0 OK\r\n'
reply: retcode (235); Msg: 2.0.0 OK
send: 'mail FROM:<doug.markant@yahoo.com> size=10683\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
send: 'rcpt TO:<dmarkant@gmail.com>\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
send: 'data\r\n'
reply: '354 Start Mail. End with CRLF.CRLF\r\n'
reply: retcode (354); Msg: Start Mail. End with CRLF.CRLF
data: (354, 'Start Mail. End with CRLF.CRLF')
send: 'Content-Type: text/plain; charset="utf-8"\r\nMIME-Version: 1.0\r\nContent-Transfer-Encoding: base64\r\nSubject: =?utf-8?q?=5Bwebexp=5D_new_participant_data_for_active_rule_learning?=\r\nFrom: doug.markant@yahoo.com\r\nTo: dmarkant@gmail.com\r\n\r\nIntcImNvbmRpdGlvblwiOjEsXCJjb3VudGVyYmFsYW5jZVwiOjAsXCJhc3NpZ25tZW50SWRcIjpc\r\nImxhYlwiLFwid29ya2VySWRcIjpcInRlc3Q3XCIsXCJoaXRJZFwiOlwibGFiXCIsXCJjdXJyZW50\r\ndHJpYWxcIjo2MyxcImJvbnVzXCI6MCxcImRhdGFcIjpbe1wiY3VycmVudF90cmlhbFwiOjAsXCJk\r\nYXRlVGltZVwiOjE0MzE5ODM4NzQ5OTIsXCJ0cmlhbGRhdGFcIjpbXCJ1bmlxdWVJZFwiLFwidGVz\r\ndDc6bGFiXCJdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6\r\nMSxcImRhdGVUaW1lXCI6MTQzMTk4Mzg3NDk5NCxcInRyaWFsZGF0YVwiOltcImNvbmRpdGlvblwi\r\nLDFdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6MixcImRh\r\ndGVUaW1lXCI6MTQzMTk4Mzg3NDk5NCxcInRyaWFsZGF0YVwiOltcImNvdW50ZXJiYWxhbmNlXCIs\r\nMF0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJpYWxcIjozLFwiZGF0\r\nZVRpbWVcIjoxNDMxOTgzODc0OTk0LFwidHJpYWxkYXRhXCI6W1wicnVsZV9jb25kXCIsXCJyYlwi\r\nXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlhbFwiOjQsXCJkYXRl\r\nVGltZVwiOjE0MzE5ODM4NzQ5OTUsXCJ0cmlhbGRhdGFcIjpbXCJzdGltX2NvbmRcIixcInJlY3Rh\r\nbmdsZVwiXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlhbFwiOjUs\r\nXCJkYXRlVGltZVwiOjE0MzE5ODM4NzQ5OTUsXCJ0cmlhbGRhdGFcIjpbXCJzZWxfY29uZFwiLFwi\r\nYm90aFwiXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlhbFwiOjYs\r\nXCJkYXRlVGltZVwiOjE0MzE5ODM4NzQ5OTUsXCJ0cmlhbGRhdGFcIjpbXCJkaW1fbWFwcGluZ1wi\r\nLDFdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6NyxcImRh\r\ndGVUaW1lXCI6MTQzMTk4Mzg3NDk5NSxcInRyaWFsZGF0YVwiOltcImxvYWRpbmcgdGVzdCBzZXRz\r\nIGZyb206IHN0YXRpYy90ZXN0c2V0cy5jc3ZcIl0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9\r\nLHtcImN1cnJlbnRfdHJpYWxcIjo4LFwiZGF0ZVRpbWVcIjoxNDMxOTgzODc1MDAyLFwidHJpYWxk\r\nYXRhXCI6W1wiQ09NUExFVEVcIl0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJl\r\nbnRfdHJpYWxcIjo5LFwiZGF0ZVRpbWVcIjoxNDMxOTg0MTkzNzU5LFwidHJpYWxkYXRhXCI6W1wi\r\ndW5pcXVlSWRcIixcInRlc3Q3OmxhYlwiXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wi\r\nY3VycmVudF90cmlhbFwiOjEwLFwiZGF0ZVRpbWVcIjoxNDMxOTg0MTkzNzYyLFwidHJpYWxkYXRh\r\nXCI6W1wiY29uZGl0aW9uXCIsMV0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJl\r\nbnRfdHJpYWxcIjoxMSxcImRhdGVUaW1lXCI6MTQzMTk4NDE5Mzc2MixcInRyaWFsZGF0YVwiOltc\r\nImNvdW50ZXJiYWxhbmNlXCIsMF0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJl\r\nbnRfdHJpYWxcIjoxMixcImRhdGVUaW1lXCI6MTQzMTk4NDE5Mzc2MyxcInRyaWFsZGF0YVwiOltc\r\nInJ1bGVfY29uZFwiLFwicmJcIl0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJl\r\nbnRfdHJpYWxcIjoxMyxcImRhdGVUaW1lXCI6MTQzMTk4NDE5Mzc2MyxcInRyaWFsZGF0YVwiOltc\r\nInN0aW1fY29uZFwiLFwicmVjdGFuZ2xlXCJdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7\r\nXCJjdXJyZW50X3RyaWFsXCI6MTQsXCJkYXRlVGltZVwiOjE0MzE5ODQxOTM3NjMsXCJ0cmlhbGRh\r\ndGFcIjpbXCJzZWxfY29uZFwiLFwiYm90aFwiXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0s\r\ne1wiY3VycmVudF90cmlhbFwiOjE1LFwiZGF0ZVRpbWVcIjoxNDMxOTg0MTkzNzYzLFwidHJpYWxk\r\nYXRhXCI6W1wiZGltX21hcHBpbmdcIiwxXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wi\r\nY3VycmVudF90cmlhbFwiOjE2LFwiZGF0ZVRpbWVcIjoxNDMxOTg0MTkzNzY0LFwidHJpYWxkYXRh\r\nXCI6W1wibG9hZGluZyB0ZXN0IHNldHMgZnJvbTogc3RhdGljL3Rlc3RzZXRzLmNzdlwiXSxcInVu\r\naXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlhbFwiOjE3LFwiZGF0ZVRpbWVc\r\nIjoxNDMxOTg0MTkzNzc0LFwidHJpYWxkYXRhXCI6W1wiQ09NUExFVEVcIl0sXCJ1bmlxdWVpZFwi\r\nOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJpYWxcIjoxOCxcImRhdGVUaW1lXCI6MTQzMTk4\r\nNDIzNjkxNCxcInRyaWFsZGF0YVwiOltcInVuaXF1ZUlkXCIsXCJ0ZXN0NzpsYWJcIl0sXCJ1bmlx\r\ndWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJpYWxcIjoxOSxcImRhdGVUaW1lXCI6\r\nMTQzMTk4NDIzNjkxOSxcInRyaWFsZGF0YVwiOltcImNvbmRpdGlvblwiLDFdLFwidW5pcXVlaWRc\r\nIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6MjAsXCJkYXRlVGltZVwiOjE0MzE5\r\nODQyMzY5MTksXCJ0cmlhbGRhdGFcIjpbXCJjb3VudGVyYmFsYW5jZVwiLDBdLFwidW5pcXVlaWRc\r\nIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6MjEsXCJkYXRlVGltZVwiOjE0MzE5\r\nODQyMzY5MTksXCJ0cmlhbGRhdGFcIjpbXCJydWxlX2NvbmRcIixcInJiXCJdLFwidW5pcXVlaWRc\r\nIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6MjIsXCJkYXRlVGltZVwiOjE0MzE5\r\nODQyMzY5MTksXCJ0cmlhbGRhdGFcIjpbXCJzdGltX2NvbmRcIixcInJlY3RhbmdsZVwiXSxcInVu\r\naXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlhbFwiOjIzLFwiZGF0ZVRpbWVc\r\nIjoxNDMxOTg0MjM2OTE5LFwidHJpYWxkYXRhXCI6W1wic2VsX2NvbmRcIixcImJvdGhcIl0sXCJ1\r\nbmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJpYWxcIjoyNCxcImRhdGVUaW1l\r\nXCI6MTQzMTk4NDIzNjkyMCxcInRyaWFsZGF0YVwiOltcImRpbV9tYXBwaW5nXCIsMF0sXCJ1bmlx\r\ndWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJpYWxcIjoyNSxcImRhdGVUaW1lXCI6\r\nMTQzMTk4NDIzNjkyMCxcInRyaWFsZGF0YVwiOltcImxvYWRpbmcgdGVzdCBzZXRzIGZyb206IHN0\r\nYXRpYy90ZXN0c2V0cy5jc3ZcIl0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJl\r\nbnRfdHJpYWxcIjoyNixcImRhdGVUaW1lXCI6MTQzMTk4NDIzNjkyNixcInRyaWFsZGF0YVwiOltc\r\nIkNPTVBMRVRFXCJdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFs\r\nXCI6MjcsXCJkYXRlVGltZVwiOjE0MzE5ODQyOTI4OTAsXCJ0cmlhbGRhdGFcIjpbXCJ1bmlxdWVJ\r\nZFwiLFwidGVzdDc6bGFiXCJdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50\r\nX3RyaWFsXCI6MjgsXCJkYXRlVGltZVwiOjE0MzE5ODQyOTI4OTEsXCJ0cmlhbGRhdGFcIjpbXCJj\r\nb25kaXRpb25cIiwxXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlh\r\nbFwiOjI5LFwiZGF0ZVRpbWVcIjoxNDMxOTg0MjkyODkyLFwidHJpYWxkYXRhXCI6W1wiY291bnRl\r\ncmJhbGFuY2VcIiwwXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlh\r\nbFwiOjMwLFwiZGF0ZVRpbWVcIjoxNDMxOTg0MjkyODkyLFwidHJpYWxkYXRhXCI6W1wicnVsZV9j\r\nb25kXCIsXCJyYlwiXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlh\r\nbFwiOjMxLFwiZGF0ZVRpbWVcIjoxNDMxOTg0MjkyODkyLFwidHJpYWxkYXRhXCI6W1wic3RpbV9j\r\nb25kXCIsXCJyZWN0YW5nbGVcIl0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJl\r\nbnRfdHJpYWxcIjozMixcImRhdGVUaW1lXCI6MTQzMTk4NDI5Mjg5MixcInRyaWFsZGF0YVwiOltc\r\nInNlbF9jb25kXCIsXCJib3RoXCJdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJy\r\nZW50X3RyaWFsXCI6MzMsXCJkYXRlVGltZVwiOjE0MzE5ODQyOTI4OTIsXCJ0cmlhbGRhdGFcIjpb\r\nXCJkaW1fbWFwcGluZ1wiLDBdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50\r\nX3RyaWFsXCI6MzQsXCJkYXRlVGltZVwiOjE0MzE5ODQyOTI4OTIsXCJ0cmlhbGRhdGFcIjpbXCJs\r\nb2FkaW5nIHRlc3Qgc2V0cyBmcm9tOiBzdGF0aWMvdGVzdHNldHMuY3N2XCJdLFwidW5pcXVlaWRc\r\nIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6MzUsXCJkYXRlVGltZVwiOjE0MzE5\r\nODQyOTI4OTcsXCJ0cmlhbGRhdGFcIjpbXCJDT01QTEVURVwiXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0\r\nNzpsYWJcIn0se1wiY3VycmVudF90cmlhbFwiOjM2LFwiZGF0ZVRpbWVcIjoxNDMxOTg0MzE4ODA4\r\nLFwidHJpYWxkYXRhXCI6W1widW5pcXVlSWRcIixcInRlc3Q3OmxhYlwiXSxcInVuaXF1ZWlkXCI6\r\nXCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlhbFwiOjM3LFwiZGF0ZVRpbWVcIjoxNDMxOTg0\r\nMzE4ODExLFwidHJpYWxkYXRhXCI6W1wiY29uZGl0aW9uXCIsMV0sXCJ1bmlxdWVpZFwiOlwidGVz\r\ndDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJpYWxcIjozOCxcImRhdGVUaW1lXCI6MTQzMTk4NDMxODgx\r\nMSxcInRyaWFsZGF0YVwiOltcImNvdW50ZXJiYWxhbmNlXCIsMF0sXCJ1bmlxdWVpZFwiOlwidGVz\r\ndDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJpYWxcIjozOSxcImRhdGVUaW1lXCI6MTQzMTk4NDMxODgx\r\nMSxcInRyaWFsZGF0YVwiOltcInJ1bGVfY29uZFwiLFwicmJcIl0sXCJ1bmlxdWVpZFwiOlwidGVz\r\ndDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJpYWxcIjo0MCxcImRhdGVUaW1lXCI6MTQzMTk4NDMxODgx\r\nMSxcInRyaWFsZGF0YVwiOltcInN0aW1fY29uZFwiLFwicmVjdGFuZ2xlXCJdLFwidW5pcXVlaWRc\r\nIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6NDEsXCJkYXRlVGltZVwiOjE0MzE5\r\nODQzMTg4MTEsXCJ0cmlhbGRhdGFcIjpbXCJzZWxfY29uZFwiLFwiYm90aFwiXSxcInVuaXF1ZWlk\r\nXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlhbFwiOjQyLFwiZGF0ZVRpbWVcIjoxNDMx\r\nOTg0MzE4ODEyLFwidHJpYWxkYXRhXCI6W1wiZGltX21hcHBpbmdcIiwxXSxcInVuaXF1ZWlkXCI6\r\nXCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlhbFwiOjQzLFwiZGF0ZVRpbWVcIjoxNDMxOTg0\r\nMzE4ODEyLFwidHJpYWxkYXRhXCI6W1wibG9hZGluZyB0ZXN0IHNldHMgZnJvbTogc3RhdGljL3Rl\r\nc3RzZXRzLmNzdlwiXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlh\r\nbFwiOjQ0LFwiZGF0ZVRpbWVcIjoxNDMxOTg0MzE4ODE3LFwidHJpYWxkYXRhXCI6W1wiQ09NUExF\r\nVEVcIl0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJpYWxcIjo0NSxc\r\nImRhdGVUaW1lXCI6MTQzMTk4NDM2MzU5MCxcInRyaWFsZGF0YVwiOltcInVuaXF1ZUlkXCIsXCJ0\r\nZXN0NzpsYWJcIl0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJpYWxc\r\nIjo0NixcImRhdGVUaW1lXCI6MTQzMTk4NDM2MzU5MixcInRyaWFsZGF0YVwiOltcImNvbmRpdGlv\r\nblwiLDFdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6NDcs\r\nXCJkYXRlVGltZVwiOjE0MzE5ODQzNjM1OTIsXCJ0cmlhbGRhdGFcIjpbXCJjb3VudGVyYmFsYW5j\r\nZVwiLDBdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6NDgs\r\nXCJkYXRlVGltZVwiOjE0MzE5ODQzNjM1OTIsXCJ0cmlhbGRhdGFcIjpbXCJydWxlX2NvbmRcIixc\r\nInJiXCJdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwifSx7XCJjdXJyZW50X3RyaWFsXCI6NDks\r\nXCJkYXRlVGltZVwiOjE0MzE5ODQzNjM1OTMsXCJ0cmlhbGRhdGFcIjpbXCJzdGltX2NvbmRcIixc\r\nInJlY3RhbmdsZVwiXSxcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIn0se1wiY3VycmVudF90cmlh\r\nbFwiOjUwLFwiZGF0ZVRpbWVcIjoxNDMxOTg0MzYzNTkzLFwidHJpYWxkYXRhXCI6W1wic2VsX2Nv\r\nbmRcIixcImJvdGhcIl0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJp\r\nYWxcIjo1MSxcImRhdGVUaW1lXCI6MTQzMTk4NDM2MzU5MyxcInRyaWFsZGF0YVwiOltcImRpbV9t\r\nYXBwaW5nXCIsMF0sXCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJpYWxc\r\nIjo1MixcImRhdGVUaW1lXCI6MTQzMTk4NDM2MzU5MyxcInRyaWFsZGF0YVwiOltcImxvYWRpbmcg\r\ndGVzdCBzZXRzIGZyb206IHN0YXRpYy90ZXN0c2V0cy5jc3ZcIl0sXCJ1bmlxdWVpZFwiOlwidGVz\r\ndDc6bGFiXCJ9LHtcImN1cnJlbnRfdHJpYWxcIjo1MyxcImRhdGVUaW1lXCI6MTQzMTk4NDM2MzYw\r\nMyxcInRyaWFsZGF0YVwiOltcIkNPTVBMRVRFXCJdLFwidW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwi\r\nfSx7XCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCIsXCJjdXJyZW50X3RyaWFsXCI6NTQsXCJkYXRl\r\nVGltZVwiOjE0MzE5ODQ0MTMwMjksXCJ0cmlhbGRhdGFcIjpbXCJ1bmlxdWVJZFwiLFwidGVzdDc6\r\nbGFiXCJdfSx7XCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCIsXCJjdXJyZW50X3RyaWFsXCI6NTUs\r\nXCJkYXRlVGltZVwiOjE0MzE5ODQ0MTMwMzEsXCJ0cmlhbGRhdGFcIjpbXCJjb25kaXRpb25cIiwx\r\nXX0se1widW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwiLFwiY3VycmVudF90cmlhbFwiOjU2LFwiZGF0\r\nZVRpbWVcIjoxNDMxOTg0NDEzMDMxLFwidHJpYWxkYXRhXCI6W1wiY291bnRlcmJhbGFuY2VcIiww\r\nXX0se1widW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwiLFwiY3VycmVudF90cmlhbFwiOjU3LFwiZGF0\r\nZVRpbWVcIjoxNDMxOTg0NDEzMDMyLFwidHJpYWxkYXRhXCI6W1wicnVsZV9jb25kXCIsXCJyYlwi\r\nXX0se1widW5pcXVlaWRcIjpcInRlc3Q3OmxhYlwiLFwiY3VycmVudF90cmlhbFwiOjU4LFwiZGF0\r\nZVRpbWVcIjoxNDMxOTg0NDEzMDMyLFwidHJpYWxkYXRhXCI6W1wic3RpbV9jb25kXCIsXCJyZWN0\r\nYW5nbGVcIl19LHtcInVuaXF1ZWlkXCI6XCJ0ZXN0NzpsYWJcIixcImN1cnJlbnRfdHJpYWxcIjo1\r\nOSxcImRhdGVUaW1lXCI6MTQzMTk4NDQxMzAzMixcInRyaWFsZGF0YVwiOltcInNlbF9jb25kXCIs\r\nXCJib3RoXCJdfSx7XCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCIsXCJjdXJyZW50X3RyaWFsXCI6\r\nNjAsXCJkYXRlVGltZVwiOjE0MzE5ODQ0MTMwMzIsXCJ0cmlhbGRhdGFcIjpbXCJkaW1fbWFwcGlu\r\nZ1wiLDBdfSx7XCJ1bmlxdWVpZFwiOlwidGVzdDc6bGFiXCIsXCJjdXJyZW50X3RyaWFsXCI6NjEs\r\nXCJkYXRlVGltZVwiOjE0MzE5ODQ0MTMwMzIsXCJ0cmlhbGRhdGFcIjpbXCJsb2FkaW5nIHRlc3Qg\r\nc2V0cyBmcm9tOiBzdGF0aWMvdGVzdHNldHMuY3N2XCJdfSx7XCJ1bmlxdWVpZFwiOlwidGVzdDc6\r\nbGFiXCIsXCJjdXJyZW50X3RyaWFsXCI6NjIsXCJkYXRlVGltZVwiOjE0MzE5ODQ0MTMwMzgsXCJ0\r\ncmlhbGRhdGFcIjpbXCJDT01QTEVURVwiXX1dLFwicXVlc3Rpb25kYXRhXCI6e30sXCJldmVudGRh\r\ndGFcIjpbe1wiZXZlbnR0eXBlXCI6XCJpbml0aWFsaXplZFwiLFwiaW50ZXJ2YWxcIjowLFwidGlt\r\nZXN0YW1wXCI6MTQzMTk4Mzg3NDg5MyxcInZhbHVlXCI6bnVsbH0se1wiZXZlbnR0eXBlXCI6XCJ3\r\naW5kb3dfcmVzaXplXCIsXCJpbnRlcnZhbFwiOjAsXCJ0aW1lc3RhbXBcIjoxNDMxOTgzODc0ODkz\r\nLFwidmFsdWVcIjpbMTE1Nyw0MjhdfV0sXCJ1c2VyYWdlbnRcIjpcIlwifSI=\r\n.\r\n'
reply: '250 OK , completed\r\n'
reply: retcode (250); Msg: OK , completed
data: (250, 'OK , completed')
send: 'quit\r\n'
reply: '221 Service Closing transmission\r\n'
reply: retcode (221); Msg: Service Closing transmission
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26208)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26209)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26210)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26211)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26212)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26213)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26214)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26215)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26216)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26217)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26218)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26219)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26220)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26221)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26222)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26207)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26208)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26209)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26210)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26211)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26212)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26213)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26214)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26215)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26216)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26217)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26218)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26219)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26220)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26221)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26222)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26207)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26222)
2015-05-18 23:36:37 [26202] [CRITICAL] WORKER TIMEOUT (pid:26207)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18114)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18115)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18116)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18117)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18118)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18119)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18120)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18121)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18122)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18123)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18124)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18125)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18126)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18127)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18128)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18129)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18130)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18114)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18115)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18116)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18117)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18118)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18119)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18120)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18121)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18122)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18123)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18124)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18125)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18126)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18127)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18128)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18129)
2015-06-12 17:54:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:18130)
2015-06-12 21:40:50 [18110] [CRITICAL] WORKER TIMEOUT (pid:18272)
2015-06-12 21:40:50 [18110] [CRITICAL] WORKER TIMEOUT (pid:18273)
2015-06-12 21:40:50 [18110] [CRITICAL] WORKER TIMEOUT (pid:18257)
2015-06-12 21:40:50 [18110] [CRITICAL] WORKER TIMEOUT (pid:18258)
2015-06-12 21:40:50 [18110] [CRITICAL] WORKER TIMEOUT (pid:18259)
2015-06-12 21:40:50 [18110] [CRITICAL] WORKER TIMEOUT (pid:18260)
2015-06-12 21:40:50 [18110] [CRITICAL] WORKER TIMEOUT (pid:18261)
2015-06-12 21:40:50 [18110] [CRITICAL] WORKER TIMEOUT (pid:18262)
2015-06-12 21:40:50 [18110] [CRITICAL] WORKER TIMEOUT (pid:18263)
2015-06-12 21:40:50 [18110] [CRITICAL] WORKER TIMEOUT (pid:18264)
2015-06-12 21:40:50 [18110] [CRITICAL] WORKER TIMEOUT (pid:18265)
2015-06-12 21:40:50 [18110] [CRITICAL] WORKER TIMEOUT (pid:18266)
2015-06-12 21:40:50 [18110] [CRITICAL] WORKER TIMEOUT (pid:18267)
2015-06-12 21:40:50 [18110] [CRITICAL] WORKER TIMEOUT (pid:18268)
2015-06-12 21:40:50 [18110] [CRITICAL] WORKER TIMEOUT (pid:18269)
2015-06-12 21:40:50 [18110] [CRITICAL] WORKER TIMEOUT (pid:18270)
2015-06-12 21:40:50 [18110] [CRITICAL] WORKER TIMEOUT (pid:18271)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18603)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18604)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18605)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18606)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18607)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18608)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18609)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18610)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18611)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18612)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18613)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18614)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18616)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18617)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18618)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18619)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18620)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18604)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18605)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18606)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18607)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18608)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18609)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18610)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18611)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18612)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18613)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18614)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18616)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18617)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18618)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18619)
2015-06-13 15:25:28 [18110] [CRITICAL] WORKER TIMEOUT (pid:18620)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20001)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20002)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20003)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20004)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20005)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20006)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20007)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20008)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20009)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20010)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20011)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20012)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20013)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:19995)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:19996)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:19997)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:19998)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20001)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20002)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20003)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20004)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20005)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20006)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20007)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20008)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20009)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20010)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20011)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20012)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:20013)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:19995)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:19996)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:19997)
2015-06-13 15:32:11 [18110] [CRITICAL] WORKER TIMEOUT (pid:19998)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20032)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20033)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20034)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20035)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20036)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20037)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20038)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20039)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20040)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20041)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20042)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20043)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20044)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20028)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20029)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20030)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20031)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20035)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20036)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20037)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20038)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20039)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20040)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20041)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20042)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20043)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20044)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20028)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20029)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20030)
2015-06-13 16:00:14 [18110] [CRITICAL] WORKER TIMEOUT (pid:20031)
2015-06-24 19:08:28,662 hit_assign_worker_id_not_set_in_exp (1003) {}
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9286)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9287)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9288)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9289)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9290)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9291)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9292)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9293)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9294)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9295)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9296)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9297)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9298)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9299)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9300)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9301)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9302)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9288)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9294)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9300)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9301)
2015-06-24 21:47:43 [9282] [CRITICAL] WORKER TIMEOUT (pid:9302)
2015-06-25 11:52:25 [9282] [CRITICAL] WORKER TIMEOUT (pid:9536)
2015-06-25 11:52:25 [9282] [CRITICAL] WORKER TIMEOUT (pid:9537)
2015-06-25 11:52:25 [9282] [CRITICAL] WORKER TIMEOUT (pid:9538)
2015-06-25 11:52:25 [9282] [CRITICAL] WORKER TIMEOUT (pid:9539)
2015-06-25 11:52:25 [9282] [CRITICAL] WORKER TIMEOUT (pid:9540)
2015-06-25 11:52:25 [9282] [CRITICAL] WORKER TIMEOUT (pid:9543)
2015-06-25 11:52:25 [9282] [CRITICAL] WORKER TIMEOUT (pid:9545)
2015-06-25 11:52:25 [9282] [CRITICAL] WORKER TIMEOUT (pid:9546)
2015-06-25 11:52:25 [9282] [CRITICAL] WORKER TIMEOUT (pid:9547)
2015-06-25 11:52:25 [9282] [CRITICAL] WORKER TIMEOUT (pid:9549)
2015-06-25 11:52:25 [9282] [CRITICAL] WORKER TIMEOUT (pid:9553)
2015-06-25 11:52:25 [9282] [CRITICAL] WORKER TIMEOUT (pid:9562)
2015-06-25 11:52:25 [9282] [CRITICAL] WORKER TIMEOUT (pid:9572)
2015-06-25 11:52:25 [9282] [CRITICAL] WORKER TIMEOUT (pid:9544)
2015-06-25 11:52:25 [9282] [CRITICAL] WORKER TIMEOUT (pid:9533)
2015-06-25 11:52:25 [9282] [CRITICAL] WORKER TIMEOUT (pid:9534)
2015-06-25 11:52:25 [9282] [CRITICAL] WORKER TIMEOUT (pid:9535)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13824)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13825)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13826)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13827)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13828)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13829)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13830)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13831)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13832)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13833)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13817)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13818)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13819)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13820)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13821)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13822)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13823)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13824)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13825)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13826)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13827)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13828)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13829)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13830)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13831)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13832)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13833)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13817)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13818)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13819)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13820)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13821)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13822)
2015-06-25 20:05:51 [9282] [CRITICAL] WORKER TIMEOUT (pid:13823)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15896)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15897)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15898)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15899)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15900)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15901)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15902)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15903)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15904)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15905)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15906)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15907)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15908)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15909)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15910)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15911)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15912)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15896)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15897)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15898)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15899)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15900)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15901)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15902)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15903)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15904)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15905)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15906)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15907)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15908)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15909)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15910)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15911)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15912)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15908)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15909)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15910)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15911)
2015-06-25 20:07:01 [9282] [CRITICAL] WORKER TIMEOUT (pid:15912)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15919)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15921)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15927)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15932)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15934)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15948)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15949)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15950)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15951)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15952)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15953)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15954)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15955)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15959)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15962)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15963)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15918)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15919)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15921)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15927)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15932)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15934)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15948)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15949)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15950)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15951)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15952)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15953)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15954)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15955)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15959)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15962)
2015-06-26 11:27:20 [9282] [CRITICAL] WORKER TIMEOUT (pid:15963)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17737)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17739)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17740)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17741)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17742)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17743)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17744)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17745)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17746)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17747)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17748)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17749)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17750)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17751)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17737)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17739)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17740)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17741)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17742)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17743)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17744)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17745)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17746)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17747)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17748)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17749)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17750)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17751)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17737)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17739)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17740)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17741)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17742)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17743)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17744)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17745)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17746)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17747)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17748)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17749)
2015-06-26 11:56:47 [9282] [CRITICAL] WORKER TIMEOUT (pid:17751)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17798)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17799)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17800)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17801)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17802)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17803)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17804)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17805)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17806)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17807)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17808)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17809)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17810)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17811)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17752)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17753)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17754)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17798)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17799)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17800)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17801)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17802)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17803)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17804)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17805)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17806)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17807)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17808)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17809)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17810)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17811)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17752)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17753)
2015-06-26 18:18:21 [9282] [CRITICAL] WORKER TIMEOUT (pid:17754)
2015-07-04 12:40:42,117 hit_assign_worker_id_not_set_in_exp (1003) {}
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37792)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37793)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37794)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37795)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37796)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37797)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37798)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37799)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37800)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37801)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37802)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37803)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37787)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37788)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37789)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37790)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37791)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37794)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37795)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37796)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37797)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37798)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37799)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37800)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37801)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37802)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37803)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37787)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37788)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37789)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37790)
2015-07-04 19:17:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:37791)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39613)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39615)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39616)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39617)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39619)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39620)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39621)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39622)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39623)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39624)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39625)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39626)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39627)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39628)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39629)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39630)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39631)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39613)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39615)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39616)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39617)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39619)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39620)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39621)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39622)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39623)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39624)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39625)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39626)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39627)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39628)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39629)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39630)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39631)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39613)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39617)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39620)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39623)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39624)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39627)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39629)
2015-07-05 12:32:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:39631)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40576)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40577)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40579)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40561)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40562)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40563)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40564)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40565)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40567)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40568)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40569)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40570)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40571)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40572)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40573)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40574)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40575)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40576)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40577)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40579)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40561)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40562)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40563)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40564)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40565)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40567)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40568)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40569)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40570)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40571)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40572)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40573)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40574)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40575)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40577)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40561)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40565)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40568)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40570)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40571)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40572)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40573)
2015-07-05 14:29:00 [37783] [CRITICAL] WORKER TIMEOUT (pid:40575)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40715)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40716)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40717)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40718)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40719)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40720)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40721)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40722)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40723)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40724)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40725)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40726)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40727)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40728)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40729)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40730)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40731)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40715)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40717)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40718)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40719)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40720)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40721)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40722)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40723)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40724)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40725)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40726)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40727)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40728)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40729)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40730)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40731)
2015-07-05 16:20:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:40717)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40960)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40961)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40962)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40963)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40964)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40965)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40966)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40967)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40968)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40969)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40970)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40971)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40953)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40954)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40955)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40956)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40958)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40960)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40961)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40962)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40963)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40964)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40965)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40966)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40967)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40968)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40969)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40970)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40971)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40953)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40954)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40955)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40956)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40958)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40960)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40964)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40965)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40968)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40969)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40971)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40954)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40955)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40956)
2015-07-05 16:48:24 [37783] [CRITICAL] WORKER TIMEOUT (pid:40958)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41034)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41035)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41036)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41037)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41038)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41039)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41040)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41041)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41042)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41043)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41044)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41045)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41046)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41047)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41048)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41049)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41050)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41034)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41035)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41036)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41037)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41038)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41039)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41040)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41041)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41042)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41043)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41044)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41045)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41046)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41047)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41048)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41049)
2015-07-05 19:00:37 [37783] [CRITICAL] WORKER TIMEOUT (pid:41050)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41528)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41529)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41530)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41531)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41532)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41533)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41534)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41535)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41536)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41537)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41538)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41539)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41540)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41541)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41542)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41543)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41544)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41528)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41529)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41530)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41531)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41532)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41533)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41534)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41535)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41536)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41537)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41538)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41539)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41540)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41541)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41542)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41543)
2015-07-05 19:11:12 [37783] [CRITICAL] WORKER TIMEOUT (pid:41544)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41572)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41573)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41574)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41575)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41576)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41577)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41578)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41579)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41580)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41581)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41582)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41583)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41584)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41585)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41586)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41587)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41588)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41572)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41573)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41574)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41575)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41576)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41577)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41578)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41579)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41580)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41581)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41582)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41583)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41584)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41585)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41586)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41587)
2015-07-05 19:24:48 [37783] [CRITICAL] WORKER TIMEOUT (pid:41588)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41622)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41623)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41625)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41626)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41627)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41628)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41629)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41630)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41631)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41632)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41633)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41634)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41635)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41636)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41637)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41638)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41639)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41622)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41623)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41625)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41626)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41627)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41628)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41629)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41630)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41631)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41632)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41633)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41634)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41635)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41636)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41637)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41638)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41639)
2015-07-05 19:31:17 [37783] [CRITICAL] WORKER TIMEOUT (pid:41639)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41664)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41665)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41666)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41667)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41668)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41669)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41670)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41652)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41653)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41654)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41655)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41656)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41658)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41659)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41661)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41662)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41663)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41664)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41665)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41666)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41667)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41668)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41669)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41670)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41652)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41653)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41654)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41655)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41656)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41658)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41659)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41661)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41662)
2015-07-05 20:06:22 [37783] [CRITICAL] WORKER TIMEOUT (pid:41663)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41693)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41694)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41695)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41696)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41697)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41698)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41699)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41701)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41702)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41703)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41704)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41705)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41706)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41707)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41708)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41709)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41710)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41693)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41694)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41695)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41696)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41697)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41698)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41699)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41701)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41702)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41703)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41704)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41705)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41706)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41707)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41708)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41709)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41710)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41693)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41695)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41696)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41701)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41702)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41703)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41704)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41705)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41706)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41707)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41708)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41709)
2015-07-06 01:45:45 [37783] [CRITICAL] WORKER TIMEOUT (pid:41710)
2015-07-06 08:29:59 [37783] [CRITICAL] WORKER TIMEOUT (pid:42668)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42666)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42667)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42669)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42670)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42671)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42672)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42674)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42675)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42677)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42678)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42679)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42680)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42681)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42682)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42683)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42684)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42703)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42666)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42667)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42669)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42670)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42671)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42672)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42674)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42675)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42677)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42678)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42679)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42680)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42681)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42682)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42683)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42684)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42703)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42666)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42667)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42669)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42670)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42671)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42672)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42674)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42675)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42677)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42678)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42679)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42680)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42681)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42682)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42683)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42684)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42666)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42667)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42669)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42671)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42677)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42678)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42679)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42681)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42682)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42683)
2015-07-06 10:20:41 [37783] [CRITICAL] WORKER TIMEOUT (pid:42684)
